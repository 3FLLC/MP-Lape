{
	Author: Niels A.D
	Project: Lape (http://code.google.com/p/la-pe/)
	License: GNU Lesser GPL (http://www.gnu.org/licenses/lgpl.html)

	This include constains all the operation handling functions for most evaluations.
}
{%MainUnit lpeval.pas}

procedure lpeUInt8_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PUInt8(Right)^; end;
procedure lpeUInt8_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PInt8(Right)^; end;
procedure lpeUInt8_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PUInt16(Right)^; end;
procedure lpeUInt8_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PInt16(Right)^; end;
procedure lpeUInt8_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PUInt32(Right)^; end;
procedure lpeUInt8_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PInt32(Right)^; end;
procedure lpeUInt8_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PUInt64(Right)^; end;
procedure lpeUInt8_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PInt64(Right)^; end;
procedure lpeUInt8_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PSingle(Right)^; end;
procedure lpeUInt8_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PDouble(Right)^; end;
procedure lpeUInt8_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PCurrency(Right)^; end;
procedure lpeUInt8_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ = PExtended(Right)^; end;
procedure lpeInt8_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PUInt8(Right)^; end;
procedure lpeInt8_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PInt8(Right)^; end;
procedure lpeInt8_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PUInt16(Right)^; end;
procedure lpeInt8_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PInt16(Right)^; end;
procedure lpeInt8_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PUInt32(Right)^; end;
procedure lpeInt8_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PInt32(Right)^; end;
procedure lpeInt8_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PUInt64(Right)^; end;
procedure lpeInt8_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PInt64(Right)^; end;
procedure lpeInt8_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PSingle(Right)^; end;
procedure lpeInt8_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PDouble(Right)^; end;
procedure lpeInt8_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PCurrency(Right)^; end;
procedure lpeInt8_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ = PExtended(Right)^; end;
procedure lpeUInt16_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PUInt8(Right)^; end;
procedure lpeUInt16_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PInt8(Right)^; end;
procedure lpeUInt16_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PUInt16(Right)^; end;
procedure lpeUInt16_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PInt16(Right)^; end;
procedure lpeUInt16_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PUInt32(Right)^; end;
procedure lpeUInt16_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PInt32(Right)^; end;
procedure lpeUInt16_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PUInt64(Right)^; end;
procedure lpeUInt16_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PInt64(Right)^; end;
procedure lpeUInt16_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PSingle(Right)^; end;
procedure lpeUInt16_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PDouble(Right)^; end;
procedure lpeUInt16_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PCurrency(Right)^; end;
procedure lpeUInt16_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ = PExtended(Right)^; end;
procedure lpeInt16_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PUInt8(Right)^; end;
procedure lpeInt16_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PInt8(Right)^; end;
procedure lpeInt16_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PUInt16(Right)^; end;
procedure lpeInt16_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PInt16(Right)^; end;
procedure lpeInt16_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PUInt32(Right)^; end;
procedure lpeInt16_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PInt32(Right)^; end;
procedure lpeInt16_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PUInt64(Right)^; end;
procedure lpeInt16_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PInt64(Right)^; end;
procedure lpeInt16_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PSingle(Right)^; end;
procedure lpeInt16_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PDouble(Right)^; end;
procedure lpeInt16_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PCurrency(Right)^; end;
procedure lpeInt16_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ = PExtended(Right)^; end;
procedure lpeUInt32_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PUInt8(Right)^; end;
procedure lpeUInt32_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PInt8(Right)^; end;
procedure lpeUInt32_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PUInt16(Right)^; end;
procedure lpeUInt32_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PInt16(Right)^; end;
procedure lpeUInt32_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PUInt32(Right)^; end;
procedure lpeUInt32_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PInt32(Right)^; end;
procedure lpeUInt32_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PUInt64(Right)^; end;
procedure lpeUInt32_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PInt64(Right)^; end;
procedure lpeUInt32_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PSingle(Right)^; end;
procedure lpeUInt32_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PDouble(Right)^; end;
procedure lpeUInt32_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PCurrency(Right)^; end;
procedure lpeUInt32_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ = PExtended(Right)^; end;
procedure lpeInt32_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PUInt8(Right)^; end;
procedure lpeInt32_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PInt8(Right)^; end;
procedure lpeInt32_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PUInt16(Right)^; end;
procedure lpeInt32_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PInt16(Right)^; end;
procedure lpeInt32_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PUInt32(Right)^; end;
procedure lpeInt32_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PInt32(Right)^; end;
procedure lpeInt32_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PUInt64(Right)^; end;
procedure lpeInt32_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PInt64(Right)^; end;
procedure lpeInt32_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PSingle(Right)^; end;
procedure lpeInt32_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PDouble(Right)^; end;
procedure lpeInt32_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PCurrency(Right)^; end;
procedure lpeInt32_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ = PExtended(Right)^; end;
procedure lpeUInt64_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PUInt8(Right)^; end;
procedure lpeUInt64_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PInt8(Right)^; end;
procedure lpeUInt64_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PUInt16(Right)^; end;
procedure lpeUInt64_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PInt16(Right)^; end;
procedure lpeUInt64_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PUInt32(Right)^; end;
procedure lpeUInt64_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PInt32(Right)^; end;
procedure lpeUInt64_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PUInt64(Right)^; end;
procedure lpeUInt64_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PInt64(Right)^; end;
procedure lpeUInt64_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PSingle(Right)^; end;
procedure lpeUInt64_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PDouble(Right)^; end;
procedure lpeUInt64_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PCurrency(Right)^; end;
procedure lpeUInt64_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ = PExtended(Right)^; end;
procedure lpeInt64_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PUInt8(Right)^; end;
procedure lpeInt64_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PInt8(Right)^; end;
procedure lpeInt64_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PUInt16(Right)^; end;
procedure lpeInt64_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PInt16(Right)^; end;
procedure lpeInt64_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PUInt32(Right)^; end;
procedure lpeInt64_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PInt32(Right)^; end;
procedure lpeInt64_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PUInt64(Right)^; end;
procedure lpeInt64_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PInt64(Right)^; end;
procedure lpeInt64_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PSingle(Right)^; end;
procedure lpeInt64_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PDouble(Right)^; end;
procedure lpeInt64_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PCurrency(Right)^; end;
procedure lpeInt64_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ = PExtended(Right)^; end;
procedure lpeSingle_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PUInt8(Right)^; end;
procedure lpeSingle_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PInt8(Right)^; end;
procedure lpeSingle_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PUInt16(Right)^; end;
procedure lpeSingle_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PInt16(Right)^; end;
procedure lpeSingle_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PUInt32(Right)^; end;
procedure lpeSingle_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PInt32(Right)^; end;
procedure lpeSingle_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PUInt64(Right)^; end;
procedure lpeSingle_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PInt64(Right)^; end;
procedure lpeSingle_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PSingle(Right)^; end;
procedure lpeSingle_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PDouble(Right)^; end;
procedure lpeSingle_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PCurrency(Right)^; end;
procedure lpeSingle_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ = PExtended(Right)^; end;
procedure lpeDouble_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PUInt8(Right)^; end;
procedure lpeDouble_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PInt8(Right)^; end;
procedure lpeDouble_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PUInt16(Right)^; end;
procedure lpeDouble_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PInt16(Right)^; end;
procedure lpeDouble_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PUInt32(Right)^; end;
procedure lpeDouble_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PInt32(Right)^; end;
procedure lpeDouble_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PUInt64(Right)^; end;
procedure lpeDouble_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PInt64(Right)^; end;
procedure lpeDouble_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PSingle(Right)^; end;
procedure lpeDouble_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PDouble(Right)^; end;
procedure lpeDouble_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PCurrency(Right)^; end;
procedure lpeDouble_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ = PExtended(Right)^; end;
procedure lpeCurrency_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PUInt8(Right)^; end;
procedure lpeCurrency_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PInt8(Right)^; end;
procedure lpeCurrency_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PUInt16(Right)^; end;
procedure lpeCurrency_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PInt16(Right)^; end;
procedure lpeCurrency_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PUInt32(Right)^; end;
procedure lpeCurrency_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PInt32(Right)^; end;
procedure lpeCurrency_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PUInt64(Right)^; end;
procedure lpeCurrency_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PInt64(Right)^; end;
procedure lpeCurrency_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PSingle(Right)^; end;
procedure lpeCurrency_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PDouble(Right)^; end;
procedure lpeCurrency_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PCurrency(Right)^; end;
procedure lpeCurrency_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ = PExtended(Right)^; end;
procedure lpeExtended_EQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PUInt8(Right)^; end;
procedure lpeExtended_EQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PInt8(Right)^; end;
procedure lpeExtended_EQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PUInt16(Right)^; end;
procedure lpeExtended_EQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PInt16(Right)^; end;
procedure lpeExtended_EQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PUInt32(Right)^; end;
procedure lpeExtended_EQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PInt32(Right)^; end;
procedure lpeExtended_EQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PUInt64(Right)^; end;
procedure lpeExtended_EQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PInt64(Right)^; end;
procedure lpeExtended_EQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PSingle(Right)^; end;
procedure lpeExtended_EQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PDouble(Right)^; end;
procedure lpeExtended_EQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PCurrency(Right)^; end;
procedure lpeExtended_EQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ = PExtended(Right)^; end;
procedure lpeBoolean_EQ_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ = PBoolean(Right)^; end;
procedure lpeUInt8_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PUInt8(Right)^; end;
procedure lpeUInt8_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PInt8(Right)^; end;
procedure lpeUInt8_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PUInt16(Right)^; end;
procedure lpeUInt8_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PInt16(Right)^; end;
procedure lpeUInt8_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PUInt32(Right)^; end;
procedure lpeUInt8_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PInt32(Right)^; end;
procedure lpeUInt8_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PUInt64(Right)^; end;
procedure lpeUInt8_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PInt64(Right)^; end;
procedure lpeUInt8_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PSingle(Right)^; end;
procedure lpeUInt8_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PDouble(Right)^; end;
procedure lpeUInt8_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PCurrency(Right)^; end;
procedure lpeUInt8_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ > PExtended(Right)^; end;
procedure lpeInt8_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PUInt8(Right)^; end;
procedure lpeInt8_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PInt8(Right)^; end;
procedure lpeInt8_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PUInt16(Right)^; end;
procedure lpeInt8_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PInt16(Right)^; end;
procedure lpeInt8_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PUInt32(Right)^; end;
procedure lpeInt8_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PInt32(Right)^; end;
procedure lpeInt8_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PUInt64(Right)^; end;
procedure lpeInt8_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PInt64(Right)^; end;
procedure lpeInt8_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PSingle(Right)^; end;
procedure lpeInt8_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PDouble(Right)^; end;
procedure lpeInt8_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PCurrency(Right)^; end;
procedure lpeInt8_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ > PExtended(Right)^; end;
procedure lpeUInt16_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PUInt8(Right)^; end;
procedure lpeUInt16_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PInt8(Right)^; end;
procedure lpeUInt16_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PUInt16(Right)^; end;
procedure lpeUInt16_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PInt16(Right)^; end;
procedure lpeUInt16_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PUInt32(Right)^; end;
procedure lpeUInt16_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PInt32(Right)^; end;
procedure lpeUInt16_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PUInt64(Right)^; end;
procedure lpeUInt16_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PInt64(Right)^; end;
procedure lpeUInt16_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PSingle(Right)^; end;
procedure lpeUInt16_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PDouble(Right)^; end;
procedure lpeUInt16_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PCurrency(Right)^; end;
procedure lpeUInt16_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ > PExtended(Right)^; end;
procedure lpeInt16_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PUInt8(Right)^; end;
procedure lpeInt16_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PInt8(Right)^; end;
procedure lpeInt16_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PUInt16(Right)^; end;
procedure lpeInt16_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PInt16(Right)^; end;
procedure lpeInt16_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PUInt32(Right)^; end;
procedure lpeInt16_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PInt32(Right)^; end;
procedure lpeInt16_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PUInt64(Right)^; end;
procedure lpeInt16_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PInt64(Right)^; end;
procedure lpeInt16_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PSingle(Right)^; end;
procedure lpeInt16_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PDouble(Right)^; end;
procedure lpeInt16_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PCurrency(Right)^; end;
procedure lpeInt16_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ > PExtended(Right)^; end;
procedure lpeUInt32_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PUInt8(Right)^; end;
procedure lpeUInt32_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PInt8(Right)^; end;
procedure lpeUInt32_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PUInt16(Right)^; end;
procedure lpeUInt32_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PInt16(Right)^; end;
procedure lpeUInt32_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PUInt32(Right)^; end;
procedure lpeUInt32_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PInt32(Right)^; end;
procedure lpeUInt32_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PUInt64(Right)^; end;
procedure lpeUInt32_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PInt64(Right)^; end;
procedure lpeUInt32_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PSingle(Right)^; end;
procedure lpeUInt32_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PDouble(Right)^; end;
procedure lpeUInt32_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PCurrency(Right)^; end;
procedure lpeUInt32_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ > PExtended(Right)^; end;
procedure lpeInt32_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PUInt8(Right)^; end;
procedure lpeInt32_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PInt8(Right)^; end;
procedure lpeInt32_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PUInt16(Right)^; end;
procedure lpeInt32_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PInt16(Right)^; end;
procedure lpeInt32_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PUInt32(Right)^; end;
procedure lpeInt32_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PInt32(Right)^; end;
procedure lpeInt32_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PUInt64(Right)^; end;
procedure lpeInt32_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PInt64(Right)^; end;
procedure lpeInt32_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PSingle(Right)^; end;
procedure lpeInt32_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PDouble(Right)^; end;
procedure lpeInt32_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PCurrency(Right)^; end;
procedure lpeInt32_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ > PExtended(Right)^; end;
procedure lpeUInt64_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PUInt8(Right)^; end;
procedure lpeUInt64_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PInt8(Right)^; end;
procedure lpeUInt64_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PUInt16(Right)^; end;
procedure lpeUInt64_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PInt16(Right)^; end;
procedure lpeUInt64_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PUInt32(Right)^; end;
procedure lpeUInt64_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PInt32(Right)^; end;
procedure lpeUInt64_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PUInt64(Right)^; end;
procedure lpeUInt64_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PInt64(Right)^; end;
procedure lpeUInt64_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PSingle(Right)^; end;
procedure lpeUInt64_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PDouble(Right)^; end;
procedure lpeUInt64_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PCurrency(Right)^; end;
procedure lpeUInt64_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ > PExtended(Right)^; end;
procedure lpeInt64_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PUInt8(Right)^; end;
procedure lpeInt64_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PInt8(Right)^; end;
procedure lpeInt64_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PUInt16(Right)^; end;
procedure lpeInt64_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PInt16(Right)^; end;
procedure lpeInt64_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PUInt32(Right)^; end;
procedure lpeInt64_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PInt32(Right)^; end;
procedure lpeInt64_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PUInt64(Right)^; end;
procedure lpeInt64_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PInt64(Right)^; end;
procedure lpeInt64_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PSingle(Right)^; end;
procedure lpeInt64_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PDouble(Right)^; end;
procedure lpeInt64_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PCurrency(Right)^; end;
procedure lpeInt64_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ > PExtended(Right)^; end;
procedure lpeSingle_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PUInt8(Right)^; end;
procedure lpeSingle_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PInt8(Right)^; end;
procedure lpeSingle_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PUInt16(Right)^; end;
procedure lpeSingle_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PInt16(Right)^; end;
procedure lpeSingle_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PUInt32(Right)^; end;
procedure lpeSingle_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PInt32(Right)^; end;
procedure lpeSingle_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PUInt64(Right)^; end;
procedure lpeSingle_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PInt64(Right)^; end;
procedure lpeSingle_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PSingle(Right)^; end;
procedure lpeSingle_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PDouble(Right)^; end;
procedure lpeSingle_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PCurrency(Right)^; end;
procedure lpeSingle_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ > PExtended(Right)^; end;
procedure lpeDouble_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PUInt8(Right)^; end;
procedure lpeDouble_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PInt8(Right)^; end;
procedure lpeDouble_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PUInt16(Right)^; end;
procedure lpeDouble_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PInt16(Right)^; end;
procedure lpeDouble_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PUInt32(Right)^; end;
procedure lpeDouble_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PInt32(Right)^; end;
procedure lpeDouble_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PUInt64(Right)^; end;
procedure lpeDouble_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PInt64(Right)^; end;
procedure lpeDouble_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PSingle(Right)^; end;
procedure lpeDouble_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PDouble(Right)^; end;
procedure lpeDouble_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PCurrency(Right)^; end;
procedure lpeDouble_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ > PExtended(Right)^; end;
procedure lpeCurrency_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PUInt8(Right)^; end;
procedure lpeCurrency_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PInt8(Right)^; end;
procedure lpeCurrency_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PUInt16(Right)^; end;
procedure lpeCurrency_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PInt16(Right)^; end;
procedure lpeCurrency_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PUInt32(Right)^; end;
procedure lpeCurrency_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PInt32(Right)^; end;
procedure lpeCurrency_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PUInt64(Right)^; end;
procedure lpeCurrency_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PInt64(Right)^; end;
procedure lpeCurrency_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PSingle(Right)^; end;
procedure lpeCurrency_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PDouble(Right)^; end;
procedure lpeCurrency_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PCurrency(Right)^; end;
procedure lpeCurrency_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ > PExtended(Right)^; end;
procedure lpeExtended_GT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PUInt8(Right)^; end;
procedure lpeExtended_GT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PInt8(Right)^; end;
procedure lpeExtended_GT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PUInt16(Right)^; end;
procedure lpeExtended_GT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PInt16(Right)^; end;
procedure lpeExtended_GT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PUInt32(Right)^; end;
procedure lpeExtended_GT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PInt32(Right)^; end;
procedure lpeExtended_GT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PUInt64(Right)^; end;
procedure lpeExtended_GT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PInt64(Right)^; end;
procedure lpeExtended_GT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PSingle(Right)^; end;
procedure lpeExtended_GT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PDouble(Right)^; end;
procedure lpeExtended_GT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PCurrency(Right)^; end;
procedure lpeExtended_GT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ > PExtended(Right)^; end;
procedure lpeBoolean_GT_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ > PBoolean(Right)^; end;
procedure lpeUInt8_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PUInt8(Right)^; end;
procedure lpeUInt8_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PInt8(Right)^; end;
procedure lpeUInt8_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PUInt16(Right)^; end;
procedure lpeUInt8_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PInt16(Right)^; end;
procedure lpeUInt8_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PUInt32(Right)^; end;
procedure lpeUInt8_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PInt32(Right)^; end;
procedure lpeUInt8_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PUInt64(Right)^; end;
procedure lpeUInt8_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PInt64(Right)^; end;
procedure lpeUInt8_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PSingle(Right)^; end;
procedure lpeUInt8_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PDouble(Right)^; end;
procedure lpeUInt8_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PCurrency(Right)^; end;
procedure lpeUInt8_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ >= PExtended(Right)^; end;
procedure lpeInt8_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PUInt8(Right)^; end;
procedure lpeInt8_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PInt8(Right)^; end;
procedure lpeInt8_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PUInt16(Right)^; end;
procedure lpeInt8_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PInt16(Right)^; end;
procedure lpeInt8_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PUInt32(Right)^; end;
procedure lpeInt8_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PInt32(Right)^; end;
procedure lpeInt8_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PUInt64(Right)^; end;
procedure lpeInt8_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PInt64(Right)^; end;
procedure lpeInt8_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PSingle(Right)^; end;
procedure lpeInt8_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PDouble(Right)^; end;
procedure lpeInt8_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PCurrency(Right)^; end;
procedure lpeInt8_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ >= PExtended(Right)^; end;
procedure lpeUInt16_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PUInt8(Right)^; end;
procedure lpeUInt16_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PInt8(Right)^; end;
procedure lpeUInt16_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PUInt16(Right)^; end;
procedure lpeUInt16_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PInt16(Right)^; end;
procedure lpeUInt16_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PUInt32(Right)^; end;
procedure lpeUInt16_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PInt32(Right)^; end;
procedure lpeUInt16_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PUInt64(Right)^; end;
procedure lpeUInt16_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PInt64(Right)^; end;
procedure lpeUInt16_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PSingle(Right)^; end;
procedure lpeUInt16_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PDouble(Right)^; end;
procedure lpeUInt16_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PCurrency(Right)^; end;
procedure lpeUInt16_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ >= PExtended(Right)^; end;
procedure lpeInt16_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PUInt8(Right)^; end;
procedure lpeInt16_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PInt8(Right)^; end;
procedure lpeInt16_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PUInt16(Right)^; end;
procedure lpeInt16_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PInt16(Right)^; end;
procedure lpeInt16_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PUInt32(Right)^; end;
procedure lpeInt16_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PInt32(Right)^; end;
procedure lpeInt16_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PUInt64(Right)^; end;
procedure lpeInt16_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PInt64(Right)^; end;
procedure lpeInt16_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PSingle(Right)^; end;
procedure lpeInt16_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PDouble(Right)^; end;
procedure lpeInt16_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PCurrency(Right)^; end;
procedure lpeInt16_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ >= PExtended(Right)^; end;
procedure lpeUInt32_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PUInt8(Right)^; end;
procedure lpeUInt32_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PInt8(Right)^; end;
procedure lpeUInt32_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PUInt16(Right)^; end;
procedure lpeUInt32_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PInt16(Right)^; end;
procedure lpeUInt32_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PUInt32(Right)^; end;
procedure lpeUInt32_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PInt32(Right)^; end;
procedure lpeUInt32_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PUInt64(Right)^; end;
procedure lpeUInt32_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PInt64(Right)^; end;
procedure lpeUInt32_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PSingle(Right)^; end;
procedure lpeUInt32_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PDouble(Right)^; end;
procedure lpeUInt32_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PCurrency(Right)^; end;
procedure lpeUInt32_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ >= PExtended(Right)^; end;
procedure lpeInt32_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PUInt8(Right)^; end;
procedure lpeInt32_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PInt8(Right)^; end;
procedure lpeInt32_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PUInt16(Right)^; end;
procedure lpeInt32_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PInt16(Right)^; end;
procedure lpeInt32_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PUInt32(Right)^; end;
procedure lpeInt32_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PInt32(Right)^; end;
procedure lpeInt32_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PUInt64(Right)^; end;
procedure lpeInt32_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PInt64(Right)^; end;
procedure lpeInt32_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PSingle(Right)^; end;
procedure lpeInt32_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PDouble(Right)^; end;
procedure lpeInt32_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PCurrency(Right)^; end;
procedure lpeInt32_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ >= PExtended(Right)^; end;
procedure lpeUInt64_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PUInt8(Right)^; end;
procedure lpeUInt64_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PInt8(Right)^; end;
procedure lpeUInt64_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PUInt16(Right)^; end;
procedure lpeUInt64_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PInt16(Right)^; end;
procedure lpeUInt64_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PUInt32(Right)^; end;
procedure lpeUInt64_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PInt32(Right)^; end;
procedure lpeUInt64_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PUInt64(Right)^; end;
procedure lpeUInt64_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PInt64(Right)^; end;
procedure lpeUInt64_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PSingle(Right)^; end;
procedure lpeUInt64_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PDouble(Right)^; end;
procedure lpeUInt64_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PCurrency(Right)^; end;
procedure lpeUInt64_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ >= PExtended(Right)^; end;
procedure lpeInt64_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PUInt8(Right)^; end;
procedure lpeInt64_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PInt8(Right)^; end;
procedure lpeInt64_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PUInt16(Right)^; end;
procedure lpeInt64_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PInt16(Right)^; end;
procedure lpeInt64_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PUInt32(Right)^; end;
procedure lpeInt64_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PInt32(Right)^; end;
procedure lpeInt64_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PUInt64(Right)^; end;
procedure lpeInt64_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PInt64(Right)^; end;
procedure lpeInt64_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PSingle(Right)^; end;
procedure lpeInt64_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PDouble(Right)^; end;
procedure lpeInt64_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PCurrency(Right)^; end;
procedure lpeInt64_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ >= PExtended(Right)^; end;
procedure lpeSingle_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PUInt8(Right)^; end;
procedure lpeSingle_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PInt8(Right)^; end;
procedure lpeSingle_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PUInt16(Right)^; end;
procedure lpeSingle_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PInt16(Right)^; end;
procedure lpeSingle_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PUInt32(Right)^; end;
procedure lpeSingle_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PInt32(Right)^; end;
procedure lpeSingle_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PUInt64(Right)^; end;
procedure lpeSingle_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PInt64(Right)^; end;
procedure lpeSingle_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PSingle(Right)^; end;
procedure lpeSingle_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PDouble(Right)^; end;
procedure lpeSingle_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PCurrency(Right)^; end;
procedure lpeSingle_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ >= PExtended(Right)^; end;
procedure lpeDouble_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PUInt8(Right)^; end;
procedure lpeDouble_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PInt8(Right)^; end;
procedure lpeDouble_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PUInt16(Right)^; end;
procedure lpeDouble_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PInt16(Right)^; end;
procedure lpeDouble_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PUInt32(Right)^; end;
procedure lpeDouble_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PInt32(Right)^; end;
procedure lpeDouble_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PUInt64(Right)^; end;
procedure lpeDouble_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PInt64(Right)^; end;
procedure lpeDouble_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PSingle(Right)^; end;
procedure lpeDouble_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PDouble(Right)^; end;
procedure lpeDouble_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PCurrency(Right)^; end;
procedure lpeDouble_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ >= PExtended(Right)^; end;
procedure lpeCurrency_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PUInt8(Right)^; end;
procedure lpeCurrency_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PInt8(Right)^; end;
procedure lpeCurrency_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PUInt16(Right)^; end;
procedure lpeCurrency_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PInt16(Right)^; end;
procedure lpeCurrency_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PUInt32(Right)^; end;
procedure lpeCurrency_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PInt32(Right)^; end;
procedure lpeCurrency_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PUInt64(Right)^; end;
procedure lpeCurrency_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PInt64(Right)^; end;
procedure lpeCurrency_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PSingle(Right)^; end;
procedure lpeCurrency_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PDouble(Right)^; end;
procedure lpeCurrency_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PCurrency(Right)^; end;
procedure lpeCurrency_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ >= PExtended(Right)^; end;
procedure lpeExtended_GTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PUInt8(Right)^; end;
procedure lpeExtended_GTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PInt8(Right)^; end;
procedure lpeExtended_GTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PUInt16(Right)^; end;
procedure lpeExtended_GTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PInt16(Right)^; end;
procedure lpeExtended_GTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PUInt32(Right)^; end;
procedure lpeExtended_GTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PInt32(Right)^; end;
procedure lpeExtended_GTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PUInt64(Right)^; end;
procedure lpeExtended_GTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PInt64(Right)^; end;
procedure lpeExtended_GTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PSingle(Right)^; end;
procedure lpeExtended_GTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PDouble(Right)^; end;
procedure lpeExtended_GTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PCurrency(Right)^; end;
procedure lpeExtended_GTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ >= PExtended(Right)^; end;
procedure lpeBoolean_GTEQ_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ >= PBoolean(Right)^; end;
procedure lpeUInt8_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PUInt8(Right)^; end;
procedure lpeUInt8_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PInt8(Right)^; end;
procedure lpeUInt8_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PUInt16(Right)^; end;
procedure lpeUInt8_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PInt16(Right)^; end;
procedure lpeUInt8_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PUInt32(Right)^; end;
procedure lpeUInt8_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PInt32(Right)^; end;
procedure lpeUInt8_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PUInt64(Right)^; end;
procedure lpeUInt8_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PInt64(Right)^; end;
procedure lpeUInt8_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PSingle(Right)^; end;
procedure lpeUInt8_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PDouble(Right)^; end;
procedure lpeUInt8_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PCurrency(Right)^; end;
procedure lpeUInt8_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ < PExtended(Right)^; end;
procedure lpeInt8_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PUInt8(Right)^; end;
procedure lpeInt8_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PInt8(Right)^; end;
procedure lpeInt8_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PUInt16(Right)^; end;
procedure lpeInt8_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PInt16(Right)^; end;
procedure lpeInt8_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PUInt32(Right)^; end;
procedure lpeInt8_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PInt32(Right)^; end;
procedure lpeInt8_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PUInt64(Right)^; end;
procedure lpeInt8_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PInt64(Right)^; end;
procedure lpeInt8_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PSingle(Right)^; end;
procedure lpeInt8_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PDouble(Right)^; end;
procedure lpeInt8_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PCurrency(Right)^; end;
procedure lpeInt8_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ < PExtended(Right)^; end;
procedure lpeUInt16_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PUInt8(Right)^; end;
procedure lpeUInt16_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PInt8(Right)^; end;
procedure lpeUInt16_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PUInt16(Right)^; end;
procedure lpeUInt16_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PInt16(Right)^; end;
procedure lpeUInt16_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PUInt32(Right)^; end;
procedure lpeUInt16_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PInt32(Right)^; end;
procedure lpeUInt16_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PUInt64(Right)^; end;
procedure lpeUInt16_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PInt64(Right)^; end;
procedure lpeUInt16_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PSingle(Right)^; end;
procedure lpeUInt16_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PDouble(Right)^; end;
procedure lpeUInt16_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PCurrency(Right)^; end;
procedure lpeUInt16_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ < PExtended(Right)^; end;
procedure lpeInt16_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PUInt8(Right)^; end;
procedure lpeInt16_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PInt8(Right)^; end;
procedure lpeInt16_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PUInt16(Right)^; end;
procedure lpeInt16_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PInt16(Right)^; end;
procedure lpeInt16_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PUInt32(Right)^; end;
procedure lpeInt16_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PInt32(Right)^; end;
procedure lpeInt16_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PUInt64(Right)^; end;
procedure lpeInt16_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PInt64(Right)^; end;
procedure lpeInt16_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PSingle(Right)^; end;
procedure lpeInt16_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PDouble(Right)^; end;
procedure lpeInt16_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PCurrency(Right)^; end;
procedure lpeInt16_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ < PExtended(Right)^; end;
procedure lpeUInt32_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PUInt8(Right)^; end;
procedure lpeUInt32_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PInt8(Right)^; end;
procedure lpeUInt32_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PUInt16(Right)^; end;
procedure lpeUInt32_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PInt16(Right)^; end;
procedure lpeUInt32_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PUInt32(Right)^; end;
procedure lpeUInt32_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PInt32(Right)^; end;
procedure lpeUInt32_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PUInt64(Right)^; end;
procedure lpeUInt32_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PInt64(Right)^; end;
procedure lpeUInt32_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PSingle(Right)^; end;
procedure lpeUInt32_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PDouble(Right)^; end;
procedure lpeUInt32_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PCurrency(Right)^; end;
procedure lpeUInt32_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ < PExtended(Right)^; end;
procedure lpeInt32_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PUInt8(Right)^; end;
procedure lpeInt32_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PInt8(Right)^; end;
procedure lpeInt32_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PUInt16(Right)^; end;
procedure lpeInt32_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PInt16(Right)^; end;
procedure lpeInt32_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PUInt32(Right)^; end;
procedure lpeInt32_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PInt32(Right)^; end;
procedure lpeInt32_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PUInt64(Right)^; end;
procedure lpeInt32_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PInt64(Right)^; end;
procedure lpeInt32_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PSingle(Right)^; end;
procedure lpeInt32_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PDouble(Right)^; end;
procedure lpeInt32_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PCurrency(Right)^; end;
procedure lpeInt32_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ < PExtended(Right)^; end;
procedure lpeUInt64_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PUInt8(Right)^; end;
procedure lpeUInt64_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PInt8(Right)^; end;
procedure lpeUInt64_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PUInt16(Right)^; end;
procedure lpeUInt64_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PInt16(Right)^; end;
procedure lpeUInt64_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PUInt32(Right)^; end;
procedure lpeUInt64_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PInt32(Right)^; end;
procedure lpeUInt64_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PUInt64(Right)^; end;
procedure lpeUInt64_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PInt64(Right)^; end;
procedure lpeUInt64_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PSingle(Right)^; end;
procedure lpeUInt64_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PDouble(Right)^; end;
procedure lpeUInt64_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PCurrency(Right)^; end;
procedure lpeUInt64_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ < PExtended(Right)^; end;
procedure lpeInt64_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PUInt8(Right)^; end;
procedure lpeInt64_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PInt8(Right)^; end;
procedure lpeInt64_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PUInt16(Right)^; end;
procedure lpeInt64_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PInt16(Right)^; end;
procedure lpeInt64_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PUInt32(Right)^; end;
procedure lpeInt64_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PInt32(Right)^; end;
procedure lpeInt64_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PUInt64(Right)^; end;
procedure lpeInt64_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PInt64(Right)^; end;
procedure lpeInt64_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PSingle(Right)^; end;
procedure lpeInt64_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PDouble(Right)^; end;
procedure lpeInt64_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PCurrency(Right)^; end;
procedure lpeInt64_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ < PExtended(Right)^; end;
procedure lpeSingle_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PUInt8(Right)^; end;
procedure lpeSingle_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PInt8(Right)^; end;
procedure lpeSingle_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PUInt16(Right)^; end;
procedure lpeSingle_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PInt16(Right)^; end;
procedure lpeSingle_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PUInt32(Right)^; end;
procedure lpeSingle_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PInt32(Right)^; end;
procedure lpeSingle_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PUInt64(Right)^; end;
procedure lpeSingle_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PInt64(Right)^; end;
procedure lpeSingle_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PSingle(Right)^; end;
procedure lpeSingle_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PDouble(Right)^; end;
procedure lpeSingle_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PCurrency(Right)^; end;
procedure lpeSingle_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ < PExtended(Right)^; end;
procedure lpeDouble_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PUInt8(Right)^; end;
procedure lpeDouble_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PInt8(Right)^; end;
procedure lpeDouble_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PUInt16(Right)^; end;
procedure lpeDouble_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PInt16(Right)^; end;
procedure lpeDouble_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PUInt32(Right)^; end;
procedure lpeDouble_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PInt32(Right)^; end;
procedure lpeDouble_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PUInt64(Right)^; end;
procedure lpeDouble_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PInt64(Right)^; end;
procedure lpeDouble_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PSingle(Right)^; end;
procedure lpeDouble_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PDouble(Right)^; end;
procedure lpeDouble_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PCurrency(Right)^; end;
procedure lpeDouble_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ < PExtended(Right)^; end;
procedure lpeCurrency_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PUInt8(Right)^; end;
procedure lpeCurrency_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PInt8(Right)^; end;
procedure lpeCurrency_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PUInt16(Right)^; end;
procedure lpeCurrency_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PInt16(Right)^; end;
procedure lpeCurrency_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PUInt32(Right)^; end;
procedure lpeCurrency_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PInt32(Right)^; end;
procedure lpeCurrency_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PUInt64(Right)^; end;
procedure lpeCurrency_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PInt64(Right)^; end;
procedure lpeCurrency_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PSingle(Right)^; end;
procedure lpeCurrency_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PDouble(Right)^; end;
procedure lpeCurrency_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PCurrency(Right)^; end;
procedure lpeCurrency_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ < PExtended(Right)^; end;
procedure lpeExtended_LT_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PUInt8(Right)^; end;
procedure lpeExtended_LT_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PInt8(Right)^; end;
procedure lpeExtended_LT_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PUInt16(Right)^; end;
procedure lpeExtended_LT_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PInt16(Right)^; end;
procedure lpeExtended_LT_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PUInt32(Right)^; end;
procedure lpeExtended_LT_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PInt32(Right)^; end;
procedure lpeExtended_LT_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PUInt64(Right)^; end;
procedure lpeExtended_LT_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PInt64(Right)^; end;
procedure lpeExtended_LT_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PSingle(Right)^; end;
procedure lpeExtended_LT_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PDouble(Right)^; end;
procedure lpeExtended_LT_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PCurrency(Right)^; end;
procedure lpeExtended_LT_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ < PExtended(Right)^; end;
procedure lpeBoolean_LT_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ < PBoolean(Right)^; end;
procedure lpeUInt8_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PUInt8(Right)^; end;
procedure lpeUInt8_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PInt8(Right)^; end;
procedure lpeUInt8_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PUInt16(Right)^; end;
procedure lpeUInt8_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PInt16(Right)^; end;
procedure lpeUInt8_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PUInt32(Right)^; end;
procedure lpeUInt8_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PInt32(Right)^; end;
procedure lpeUInt8_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PUInt64(Right)^; end;
procedure lpeUInt8_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PInt64(Right)^; end;
procedure lpeUInt8_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PSingle(Right)^; end;
procedure lpeUInt8_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PDouble(Right)^; end;
procedure lpeUInt8_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PCurrency(Right)^; end;
procedure lpeUInt8_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <= PExtended(Right)^; end;
procedure lpeInt8_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PUInt8(Right)^; end;
procedure lpeInt8_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PInt8(Right)^; end;
procedure lpeInt8_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PUInt16(Right)^; end;
procedure lpeInt8_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PInt16(Right)^; end;
procedure lpeInt8_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PUInt32(Right)^; end;
procedure lpeInt8_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PInt32(Right)^; end;
procedure lpeInt8_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PUInt64(Right)^; end;
procedure lpeInt8_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PInt64(Right)^; end;
procedure lpeInt8_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PSingle(Right)^; end;
procedure lpeInt8_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PDouble(Right)^; end;
procedure lpeInt8_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PCurrency(Right)^; end;
procedure lpeInt8_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <= PExtended(Right)^; end;
procedure lpeUInt16_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PUInt8(Right)^; end;
procedure lpeUInt16_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PInt8(Right)^; end;
procedure lpeUInt16_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PUInt16(Right)^; end;
procedure lpeUInt16_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PInt16(Right)^; end;
procedure lpeUInt16_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PUInt32(Right)^; end;
procedure lpeUInt16_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PInt32(Right)^; end;
procedure lpeUInt16_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PUInt64(Right)^; end;
procedure lpeUInt16_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PInt64(Right)^; end;
procedure lpeUInt16_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PSingle(Right)^; end;
procedure lpeUInt16_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PDouble(Right)^; end;
procedure lpeUInt16_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PCurrency(Right)^; end;
procedure lpeUInt16_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <= PExtended(Right)^; end;
procedure lpeInt16_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PUInt8(Right)^; end;
procedure lpeInt16_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PInt8(Right)^; end;
procedure lpeInt16_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PUInt16(Right)^; end;
procedure lpeInt16_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PInt16(Right)^; end;
procedure lpeInt16_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PUInt32(Right)^; end;
procedure lpeInt16_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PInt32(Right)^; end;
procedure lpeInt16_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PUInt64(Right)^; end;
procedure lpeInt16_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PInt64(Right)^; end;
procedure lpeInt16_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PSingle(Right)^; end;
procedure lpeInt16_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PDouble(Right)^; end;
procedure lpeInt16_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PCurrency(Right)^; end;
procedure lpeInt16_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <= PExtended(Right)^; end;
procedure lpeUInt32_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PUInt8(Right)^; end;
procedure lpeUInt32_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PInt8(Right)^; end;
procedure lpeUInt32_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PUInt16(Right)^; end;
procedure lpeUInt32_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PInt16(Right)^; end;
procedure lpeUInt32_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PUInt32(Right)^; end;
procedure lpeUInt32_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PInt32(Right)^; end;
procedure lpeUInt32_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PUInt64(Right)^; end;
procedure lpeUInt32_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PInt64(Right)^; end;
procedure lpeUInt32_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PSingle(Right)^; end;
procedure lpeUInt32_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PDouble(Right)^; end;
procedure lpeUInt32_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PCurrency(Right)^; end;
procedure lpeUInt32_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <= PExtended(Right)^; end;
procedure lpeInt32_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PUInt8(Right)^; end;
procedure lpeInt32_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PInt8(Right)^; end;
procedure lpeInt32_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PUInt16(Right)^; end;
procedure lpeInt32_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PInt16(Right)^; end;
procedure lpeInt32_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PUInt32(Right)^; end;
procedure lpeInt32_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PInt32(Right)^; end;
procedure lpeInt32_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PUInt64(Right)^; end;
procedure lpeInt32_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PInt64(Right)^; end;
procedure lpeInt32_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PSingle(Right)^; end;
procedure lpeInt32_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PDouble(Right)^; end;
procedure lpeInt32_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PCurrency(Right)^; end;
procedure lpeInt32_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <= PExtended(Right)^; end;
procedure lpeUInt64_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PUInt8(Right)^; end;
procedure lpeUInt64_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PInt8(Right)^; end;
procedure lpeUInt64_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PUInt16(Right)^; end;
procedure lpeUInt64_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PInt16(Right)^; end;
procedure lpeUInt64_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PUInt32(Right)^; end;
procedure lpeUInt64_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PInt32(Right)^; end;
procedure lpeUInt64_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PUInt64(Right)^; end;
procedure lpeUInt64_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PInt64(Right)^; end;
procedure lpeUInt64_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PSingle(Right)^; end;
procedure lpeUInt64_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PDouble(Right)^; end;
procedure lpeUInt64_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PCurrency(Right)^; end;
procedure lpeUInt64_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <= PExtended(Right)^; end;
procedure lpeInt64_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PUInt8(Right)^; end;
procedure lpeInt64_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PInt8(Right)^; end;
procedure lpeInt64_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PUInt16(Right)^; end;
procedure lpeInt64_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PInt16(Right)^; end;
procedure lpeInt64_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PUInt32(Right)^; end;
procedure lpeInt64_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PInt32(Right)^; end;
procedure lpeInt64_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PUInt64(Right)^; end;
procedure lpeInt64_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PInt64(Right)^; end;
procedure lpeInt64_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PSingle(Right)^; end;
procedure lpeInt64_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PDouble(Right)^; end;
procedure lpeInt64_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PCurrency(Right)^; end;
procedure lpeInt64_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <= PExtended(Right)^; end;
procedure lpeSingle_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PUInt8(Right)^; end;
procedure lpeSingle_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PInt8(Right)^; end;
procedure lpeSingle_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PUInt16(Right)^; end;
procedure lpeSingle_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PInt16(Right)^; end;
procedure lpeSingle_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PUInt32(Right)^; end;
procedure lpeSingle_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PInt32(Right)^; end;
procedure lpeSingle_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PUInt64(Right)^; end;
procedure lpeSingle_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PInt64(Right)^; end;
procedure lpeSingle_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PSingle(Right)^; end;
procedure lpeSingle_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PDouble(Right)^; end;
procedure lpeSingle_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PCurrency(Right)^; end;
procedure lpeSingle_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <= PExtended(Right)^; end;
procedure lpeDouble_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PUInt8(Right)^; end;
procedure lpeDouble_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PInt8(Right)^; end;
procedure lpeDouble_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PUInt16(Right)^; end;
procedure lpeDouble_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PInt16(Right)^; end;
procedure lpeDouble_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PUInt32(Right)^; end;
procedure lpeDouble_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PInt32(Right)^; end;
procedure lpeDouble_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PUInt64(Right)^; end;
procedure lpeDouble_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PInt64(Right)^; end;
procedure lpeDouble_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PSingle(Right)^; end;
procedure lpeDouble_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PDouble(Right)^; end;
procedure lpeDouble_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PCurrency(Right)^; end;
procedure lpeDouble_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <= PExtended(Right)^; end;
procedure lpeCurrency_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PUInt8(Right)^; end;
procedure lpeCurrency_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PInt8(Right)^; end;
procedure lpeCurrency_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PUInt16(Right)^; end;
procedure lpeCurrency_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PInt16(Right)^; end;
procedure lpeCurrency_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PUInt32(Right)^; end;
procedure lpeCurrency_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PInt32(Right)^; end;
procedure lpeCurrency_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PUInt64(Right)^; end;
procedure lpeCurrency_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PInt64(Right)^; end;
procedure lpeCurrency_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PSingle(Right)^; end;
procedure lpeCurrency_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PDouble(Right)^; end;
procedure lpeCurrency_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PCurrency(Right)^; end;
procedure lpeCurrency_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <= PExtended(Right)^; end;
procedure lpeExtended_LTEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PUInt8(Right)^; end;
procedure lpeExtended_LTEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PInt8(Right)^; end;
procedure lpeExtended_LTEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PUInt16(Right)^; end;
procedure lpeExtended_LTEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PInt16(Right)^; end;
procedure lpeExtended_LTEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PUInt32(Right)^; end;
procedure lpeExtended_LTEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PInt32(Right)^; end;
procedure lpeExtended_LTEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PUInt64(Right)^; end;
procedure lpeExtended_LTEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PInt64(Right)^; end;
procedure lpeExtended_LTEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PSingle(Right)^; end;
procedure lpeExtended_LTEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PDouble(Right)^; end;
procedure lpeExtended_LTEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PCurrency(Right)^; end;
procedure lpeExtended_LTEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <= PExtended(Right)^; end;
procedure lpeBoolean_LTEQ_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ <= PBoolean(Right)^; end;
procedure lpeUInt8_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PUInt8(Right)^; end;
procedure lpeUInt8_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PInt8(Right)^; end;
procedure lpeUInt8_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PUInt16(Right)^; end;
procedure lpeUInt8_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PInt16(Right)^; end;
procedure lpeUInt8_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PUInt32(Right)^; end;
procedure lpeUInt8_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PInt32(Right)^; end;
procedure lpeUInt8_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PUInt64(Right)^; end;
procedure lpeUInt8_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PInt64(Right)^; end;
procedure lpeUInt8_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PSingle(Right)^; end;
procedure lpeUInt8_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PDouble(Right)^; end;
procedure lpeUInt8_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PCurrency(Right)^; end;
procedure lpeUInt8_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt8(Left)^ <> PExtended(Right)^; end;
procedure lpeInt8_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PUInt8(Right)^; end;
procedure lpeInt8_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PInt8(Right)^; end;
procedure lpeInt8_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PUInt16(Right)^; end;
procedure lpeInt8_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PInt16(Right)^; end;
procedure lpeInt8_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PUInt32(Right)^; end;
procedure lpeInt8_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PInt32(Right)^; end;
procedure lpeInt8_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PUInt64(Right)^; end;
procedure lpeInt8_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PInt64(Right)^; end;
procedure lpeInt8_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PSingle(Right)^; end;
procedure lpeInt8_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PDouble(Right)^; end;
procedure lpeInt8_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PCurrency(Right)^; end;
procedure lpeInt8_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt8(Left)^ <> PExtended(Right)^; end;
procedure lpeUInt16_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PUInt8(Right)^; end;
procedure lpeUInt16_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PInt8(Right)^; end;
procedure lpeUInt16_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PUInt16(Right)^; end;
procedure lpeUInt16_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PInt16(Right)^; end;
procedure lpeUInt16_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PUInt32(Right)^; end;
procedure lpeUInt16_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PInt32(Right)^; end;
procedure lpeUInt16_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PUInt64(Right)^; end;
procedure lpeUInt16_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PInt64(Right)^; end;
procedure lpeUInt16_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PSingle(Right)^; end;
procedure lpeUInt16_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PDouble(Right)^; end;
procedure lpeUInt16_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PCurrency(Right)^; end;
procedure lpeUInt16_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt16(Left)^ <> PExtended(Right)^; end;
procedure lpeInt16_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PUInt8(Right)^; end;
procedure lpeInt16_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PInt8(Right)^; end;
procedure lpeInt16_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PUInt16(Right)^; end;
procedure lpeInt16_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PInt16(Right)^; end;
procedure lpeInt16_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PUInt32(Right)^; end;
procedure lpeInt16_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PInt32(Right)^; end;
procedure lpeInt16_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PUInt64(Right)^; end;
procedure lpeInt16_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PInt64(Right)^; end;
procedure lpeInt16_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PSingle(Right)^; end;
procedure lpeInt16_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PDouble(Right)^; end;
procedure lpeInt16_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PCurrency(Right)^; end;
procedure lpeInt16_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt16(Left)^ <> PExtended(Right)^; end;
procedure lpeUInt32_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PUInt8(Right)^; end;
procedure lpeUInt32_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PInt8(Right)^; end;
procedure lpeUInt32_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PUInt16(Right)^; end;
procedure lpeUInt32_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PInt16(Right)^; end;
procedure lpeUInt32_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PUInt32(Right)^; end;
procedure lpeUInt32_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PInt32(Right)^; end;
procedure lpeUInt32_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PUInt64(Right)^; end;
procedure lpeUInt32_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PInt64(Right)^; end;
procedure lpeUInt32_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PSingle(Right)^; end;
procedure lpeUInt32_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PDouble(Right)^; end;
procedure lpeUInt32_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PCurrency(Right)^; end;
procedure lpeUInt32_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt32(Left)^ <> PExtended(Right)^; end;
procedure lpeInt32_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PUInt8(Right)^; end;
procedure lpeInt32_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PInt8(Right)^; end;
procedure lpeInt32_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PUInt16(Right)^; end;
procedure lpeInt32_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PInt16(Right)^; end;
procedure lpeInt32_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PUInt32(Right)^; end;
procedure lpeInt32_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PInt32(Right)^; end;
procedure lpeInt32_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PUInt64(Right)^; end;
procedure lpeInt32_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PInt64(Right)^; end;
procedure lpeInt32_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PSingle(Right)^; end;
procedure lpeInt32_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PDouble(Right)^; end;
procedure lpeInt32_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PCurrency(Right)^; end;
procedure lpeInt32_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt32(Left)^ <> PExtended(Right)^; end;
procedure lpeUInt64_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PUInt8(Right)^; end;
procedure lpeUInt64_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PInt8(Right)^; end;
procedure lpeUInt64_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PUInt16(Right)^; end;
procedure lpeUInt64_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PInt16(Right)^; end;
procedure lpeUInt64_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PUInt32(Right)^; end;
procedure lpeUInt64_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PInt32(Right)^; end;
procedure lpeUInt64_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PUInt64(Right)^; end;
procedure lpeUInt64_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PInt64(Right)^; end;
procedure lpeUInt64_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PSingle(Right)^; end;
procedure lpeUInt64_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PDouble(Right)^; end;
procedure lpeUInt64_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PCurrency(Right)^; end;
procedure lpeUInt64_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUInt64(Left)^ <> PExtended(Right)^; end;
procedure lpeInt64_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PUInt8(Right)^; end;
procedure lpeInt64_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PInt8(Right)^; end;
procedure lpeInt64_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PUInt16(Right)^; end;
procedure lpeInt64_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PInt16(Right)^; end;
procedure lpeInt64_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PUInt32(Right)^; end;
procedure lpeInt64_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PInt32(Right)^; end;
procedure lpeInt64_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PUInt64(Right)^; end;
procedure lpeInt64_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PInt64(Right)^; end;
procedure lpeInt64_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PSingle(Right)^; end;
procedure lpeInt64_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PDouble(Right)^; end;
procedure lpeInt64_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PCurrency(Right)^; end;
procedure lpeInt64_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PInt64(Left)^ <> PExtended(Right)^; end;
procedure lpeSingle_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PUInt8(Right)^; end;
procedure lpeSingle_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PInt8(Right)^; end;
procedure lpeSingle_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PUInt16(Right)^; end;
procedure lpeSingle_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PInt16(Right)^; end;
procedure lpeSingle_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PUInt32(Right)^; end;
procedure lpeSingle_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PInt32(Right)^; end;
procedure lpeSingle_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PUInt64(Right)^; end;
procedure lpeSingle_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PInt64(Right)^; end;
procedure lpeSingle_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PSingle(Right)^; end;
procedure lpeSingle_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PDouble(Right)^; end;
procedure lpeSingle_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PCurrency(Right)^; end;
procedure lpeSingle_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PSingle(Left)^ <> PExtended(Right)^; end;
procedure lpeDouble_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PUInt8(Right)^; end;
procedure lpeDouble_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PInt8(Right)^; end;
procedure lpeDouble_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PUInt16(Right)^; end;
procedure lpeDouble_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PInt16(Right)^; end;
procedure lpeDouble_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PUInt32(Right)^; end;
procedure lpeDouble_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PInt32(Right)^; end;
procedure lpeDouble_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PUInt64(Right)^; end;
procedure lpeDouble_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PInt64(Right)^; end;
procedure lpeDouble_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PSingle(Right)^; end;
procedure lpeDouble_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PDouble(Right)^; end;
procedure lpeDouble_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PCurrency(Right)^; end;
procedure lpeDouble_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PDouble(Left)^ <> PExtended(Right)^; end;
procedure lpeCurrency_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PUInt8(Right)^; end;
procedure lpeCurrency_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PInt8(Right)^; end;
procedure lpeCurrency_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PUInt16(Right)^; end;
procedure lpeCurrency_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PInt16(Right)^; end;
procedure lpeCurrency_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PUInt32(Right)^; end;
procedure lpeCurrency_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PInt32(Right)^; end;
procedure lpeCurrency_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PUInt64(Right)^; end;
procedure lpeCurrency_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PInt64(Right)^; end;
procedure lpeCurrency_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PSingle(Right)^; end;
procedure lpeCurrency_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PDouble(Right)^; end;
procedure lpeCurrency_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PCurrency(Right)^; end;
procedure lpeCurrency_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PCurrency(Left)^ <> PExtended(Right)^; end;
procedure lpeExtended_NEQ_UInt8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PUInt8(Right)^; end;
procedure lpeExtended_NEQ_Int8(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PInt8(Right)^; end;
procedure lpeExtended_NEQ_UInt16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PUInt16(Right)^; end;
procedure lpeExtended_NEQ_Int16(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PInt16(Right)^; end;
procedure lpeExtended_NEQ_UInt32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PUInt32(Right)^; end;
procedure lpeExtended_NEQ_Int32(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PInt32(Right)^; end;
procedure lpeExtended_NEQ_UInt64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PUInt64(Right)^; end;
procedure lpeExtended_NEQ_Int64(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PInt64(Right)^; end;
procedure lpeExtended_NEQ_Single(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PSingle(Right)^; end;
procedure lpeExtended_NEQ_Double(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PDouble(Right)^; end;
procedure lpeExtended_NEQ_Currency(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PCurrency(Right)^; end;
procedure lpeExtended_NEQ_Extended(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PExtended(Left)^ <> PExtended(Right)^; end;
procedure lpeBoolean_NEQ_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ <> PBoolean(Right)^; end;
procedure lpeUInt8_AND_UInt8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt8(Left)^ and PUInt8(Right)^; end;
procedure lpeUInt8_AND_Int8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt8(Left)^ and PInt8(Right)^; end;
procedure lpeUInt8_AND_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt8(Left)^ and PUInt16(Right)^; end;
procedure lpeUInt8_AND_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PUInt8(Left)^ and PInt16(Right)^; end;
procedure lpeUInt8_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ and PUInt32(Right)^; end;
procedure lpeUInt8_AND_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ and PInt32(Right)^; end;
procedure lpeUInt8_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ and PUInt64(Right)^; end;
procedure lpeUInt8_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ and PInt64(Right)^; end;
procedure lpeInt8_AND_UInt8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PInt8(Left)^ and PUInt8(Right)^; end;
procedure lpeInt8_AND_Int8(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt8(Left)^ and PInt8(Right)^; end;
procedure lpeInt8_AND_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PInt8(Left)^ and PUInt16(Right)^; end;
procedure lpeInt8_AND_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt8(Left)^ and PInt16(Right)^; end;
procedure lpeInt8_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt8(Left)^ and PUInt32(Right)^; end;
procedure lpeInt8_AND_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ and PInt32(Right)^; end;
procedure lpeInt8_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^ and PUInt64(Right)^; end;
procedure lpeInt8_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ and PInt64(Right)^; end;
procedure lpeUInt16_AND_UInt8(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ and PUInt8(Right)^; end;
procedure lpeUInt16_AND_Int8(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ and PInt8(Right)^; end;
procedure lpeUInt16_AND_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ and PUInt16(Right)^; end;
procedure lpeUInt16_AND_Int16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ and PInt16(Right)^; end;
procedure lpeUInt16_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ and PUInt32(Right)^; end;
procedure lpeUInt16_AND_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ and PInt32(Right)^; end;
procedure lpeUInt16_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ and PUInt64(Right)^; end;
procedure lpeUInt16_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ and PInt64(Right)^; end;
procedure lpeInt16_AND_UInt8(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ and PUInt8(Right)^; end;
procedure lpeInt16_AND_Int8(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ and PInt8(Right)^; end;
procedure lpeInt16_AND_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PInt16(Left)^ and PUInt16(Right)^; end;
procedure lpeInt16_AND_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ and PInt16(Right)^; end;
procedure lpeInt16_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt16(Left)^ and PUInt32(Right)^; end;
procedure lpeInt16_AND_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ and PInt32(Right)^; end;
procedure lpeInt16_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^ and PUInt64(Right)^; end;
procedure lpeInt16_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ and PInt64(Right)^; end;
procedure lpeUInt32_AND_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ and PUInt8(Right)^; end;
procedure lpeUInt32_AND_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ and PInt8(Right)^; end;
procedure lpeUInt32_AND_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ and PUInt16(Right)^; end;
procedure lpeUInt32_AND_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ and PInt16(Right)^; end;
procedure lpeUInt32_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ and PUInt32(Right)^; end;
procedure lpeUInt32_AND_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ and PInt32(Right)^; end;
procedure lpeUInt32_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ and PUInt64(Right)^; end;
procedure lpeUInt32_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ and PInt64(Right)^; end;
procedure lpeInt32_AND_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ and PUInt8(Right)^; end;
procedure lpeInt32_AND_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ and PInt8(Right)^; end;
procedure lpeInt32_AND_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ and PUInt16(Right)^; end;
procedure lpeInt32_AND_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ and PInt16(Right)^; end;
procedure lpeInt32_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt32(Left)^ and PUInt32(Right)^; end;
procedure lpeInt32_AND_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ and PInt32(Right)^; end;
procedure lpeInt32_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^ and PUInt64(Right)^; end;
procedure lpeInt32_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ and PInt64(Right)^; end;
procedure lpeUInt64_AND_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PUInt8(Right)^; end;
procedure lpeUInt64_AND_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PInt8(Right)^; end;
procedure lpeUInt64_AND_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PUInt16(Right)^; end;
procedure lpeUInt64_AND_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PInt16(Right)^; end;
procedure lpeUInt64_AND_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PUInt32(Right)^; end;
procedure lpeUInt64_AND_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PInt32(Right)^; end;
procedure lpeUInt64_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PUInt64(Right)^; end;
procedure lpeUInt64_AND_Int64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ and PInt64(Right)^; end;
procedure lpeInt64_AND_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PUInt8(Right)^; end;
procedure lpeInt64_AND_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PInt8(Right)^; end;
procedure lpeInt64_AND_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PUInt16(Right)^; end;
procedure lpeInt64_AND_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PInt16(Right)^; end;
procedure lpeInt64_AND_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PUInt32(Right)^; end;
procedure lpeInt64_AND_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PInt32(Right)^; end;
procedure lpeInt64_AND_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt64(Left)^ and PUInt64(Right)^; end;
procedure lpeInt64_AND_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ and PInt64(Right)^; end;
procedure lpeBoolean_AND_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ and PBoolean(Right)^; end;
procedure lpeUInt8_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt8(Left)^; end;
procedure lpeUInt8_ASGN_Int8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PInt8(Left)^; end;
procedure lpeUInt8_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt16(Left)^; end;
procedure lpeUInt8_ASGN_Int16(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PInt16(Left)^; end;
procedure lpeUInt8_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt32(Left)^; end;
procedure lpeUInt8_ASGN_Int32(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PInt32(Left)^; end;
procedure lpeUInt8_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt64(Left)^; end;
procedure lpeUInt8_ASGN_Int64(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PInt64(Left)^; end;
procedure lpeInt8_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PUInt8(Left)^; end;
procedure lpeInt8_ASGN_Int8(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt8(Left)^; end;
procedure lpeInt8_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PUInt16(Left)^; end;
procedure lpeInt8_ASGN_Int16(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt16(Left)^; end;
procedure lpeInt8_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PUInt32(Left)^; end;
procedure lpeInt8_ASGN_Int32(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt32(Left)^; end;
procedure lpeInt8_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PUInt64(Left)^; end;
procedure lpeInt8_ASGN_Int64(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt64(Left)^; end;
procedure lpeUInt16_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt8(Left)^; end;
procedure lpeUInt16_ASGN_Int8(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PInt8(Left)^; end;
procedure lpeUInt16_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^; end;
procedure lpeUInt16_ASGN_Int16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PInt16(Left)^; end;
procedure lpeUInt16_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt32(Left)^; end;
procedure lpeUInt16_ASGN_Int32(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PInt32(Left)^; end;
procedure lpeUInt16_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt64(Left)^; end;
procedure lpeUInt16_ASGN_Int64(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PInt64(Left)^; end;
procedure lpeInt16_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PUInt8(Left)^; end;
procedure lpeInt16_ASGN_Int8(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt8(Left)^; end;
procedure lpeInt16_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PUInt16(Left)^; end;
procedure lpeInt16_ASGN_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^; end;
procedure lpeInt16_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PUInt32(Left)^; end;
procedure lpeInt16_ASGN_Int32(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt32(Left)^; end;
procedure lpeInt16_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PUInt64(Left)^; end;
procedure lpeInt16_ASGN_Int64(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt64(Left)^; end;
procedure lpeUInt32_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^; end;
procedure lpeUInt32_ASGN_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt8(Left)^; end;
procedure lpeUInt32_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^; end;
procedure lpeUInt32_ASGN_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt16(Left)^; end;
procedure lpeUInt32_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^; end;
procedure lpeUInt32_ASGN_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt32(Left)^; end;
procedure lpeUInt32_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt64(Left)^; end;
procedure lpeUInt32_ASGN_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PInt64(Left)^; end;
procedure lpeInt32_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^; end;
procedure lpeInt32_ASGN_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^; end;
procedure lpeInt32_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^; end;
procedure lpeInt32_ASGN_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^; end;
procedure lpeInt32_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt32(Left)^; end;
procedure lpeInt32_ASGN_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^; end;
procedure lpeInt32_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt64(Left)^; end;
procedure lpeInt32_ASGN_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt64(Left)^; end;
procedure lpeUInt64_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^; end;
procedure lpeUInt64_ASGN_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^; end;
procedure lpeUInt64_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^; end;
procedure lpeUInt64_ASGN_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^; end;
procedure lpeUInt64_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^; end;
procedure lpeUInt64_ASGN_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^; end;
procedure lpeUInt64_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^; end;
procedure lpeUInt64_ASGN_Int64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt64(Left)^; end;
procedure lpeInt64_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^; end;
procedure lpeInt64_ASGN_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^; end;
procedure lpeInt64_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^; end;
procedure lpeInt64_ASGN_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^; end;
procedure lpeInt64_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^; end;
procedure lpeInt64_ASGN_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^; end;
procedure lpeInt64_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^; end;
procedure lpeInt64_ASGN_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^; end;
procedure lpeSingle_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt8(Left)^; end;
procedure lpeSingle_ASGN_Int8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt8(Left)^; end;
procedure lpeSingle_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt16(Left)^; end;
procedure lpeSingle_ASGN_Int16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt16(Left)^; end;
procedure lpeSingle_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt32(Left)^; end;
procedure lpeSingle_ASGN_Int32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt32(Left)^; end;
procedure lpeSingle_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt64(Left)^; end;
procedure lpeSingle_ASGN_Int64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt64(Left)^; end;
procedure lpeSingle_ASGN_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^; end;
procedure lpeSingle_ASGN_Double(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PDouble(Left)^; end;
procedure lpeSingle_ASGN_Currency(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PCurrency(Left)^; end;
procedure lpeSingle_ASGN_Extended(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PExtended(Left)^; end;
procedure lpeDouble_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt8(Left)^; end;
procedure lpeDouble_ASGN_Int8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt8(Left)^; end;
procedure lpeDouble_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt16(Left)^; end;
procedure lpeDouble_ASGN_Int16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt16(Left)^; end;
procedure lpeDouble_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt32(Left)^; end;
procedure lpeDouble_ASGN_Int32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt32(Left)^; end;
procedure lpeDouble_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt64(Left)^; end;
procedure lpeDouble_ASGN_Int64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt64(Left)^; end;
procedure lpeDouble_ASGN_Single(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PSingle(Left)^; end;
procedure lpeDouble_ASGN_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^; end;
procedure lpeDouble_ASGN_Currency(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PCurrency(Left)^; end;
procedure lpeDouble_ASGN_Extended(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PExtended(Left)^; end;
procedure lpeCurrency_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt8(Left)^; end;
procedure lpeCurrency_ASGN_Int8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt8(Left)^; end;
procedure lpeCurrency_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt16(Left)^; end;
procedure lpeCurrency_ASGN_Int16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt16(Left)^; end;
procedure lpeCurrency_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt32(Left)^; end;
procedure lpeCurrency_ASGN_Int32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt32(Left)^; end;
procedure lpeCurrency_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt64(Left)^; end;
procedure lpeCurrency_ASGN_Int64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt64(Left)^; end;
procedure lpeCurrency_ASGN_Single(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PSingle(Left)^; end;
procedure lpeCurrency_ASGN_Double(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PDouble(Left)^; end;
procedure lpeCurrency_ASGN_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^; end;
procedure lpeCurrency_ASGN_Extended(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PExtended(Left)^; end;
procedure lpeExtended_ASGN_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^; end;
procedure lpeExtended_ASGN_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^; end;
procedure lpeExtended_ASGN_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^; end;
procedure lpeExtended_ASGN_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^; end;
procedure lpeExtended_ASGN_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^; end;
procedure lpeExtended_ASGN_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^; end;
procedure lpeExtended_ASGN_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^; end;
procedure lpeExtended_ASGN_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^; end;
procedure lpeExtended_ASGN_Single(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PSingle(Left)^; end;
procedure lpeExtended_ASGN_Double(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PDouble(Left)^; end;
procedure lpeExtended_ASGN_Currency(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PCurrency(Left)^; end;
procedure lpeExtended_ASGN_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^; end;
procedure lpeBoolean_ASGN_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^; end;
procedure lpeAnsiString_ASGN_AnsiString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiString(Left)^; end;
procedure lpeWideString_ASGN_WideString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^; end;
procedure lpeUInt8_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ div PUInt8(Right)^; end;
procedure lpeUInt8_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ div PInt8(Right)^; end;
procedure lpeUInt8_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ div PUInt16(Right)^; end;
procedure lpeUInt8_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ div PInt16(Right)^; end;
procedure lpeUInt8_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ div PUInt32(Right)^; end;
procedure lpeUInt8_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ div PInt32(Right)^; end;
procedure lpeUInt8_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ div PUInt64(Right)^; end;
procedure lpeUInt8_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ div PInt64(Right)^; end;
procedure lpeInt8_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ div PUInt8(Right)^; end;
procedure lpeInt8_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ div PInt8(Right)^; end;
procedure lpeInt8_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ div PUInt16(Right)^; end;
procedure lpeInt8_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ div PInt16(Right)^; end;
procedure lpeInt8_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ div PUInt32(Right)^; end;
procedure lpeInt8_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ div PInt32(Right)^; end;
procedure lpeInt8_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ div PUInt64(Right)^; end;
procedure lpeInt8_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ div PInt64(Right)^; end;
procedure lpeUInt16_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ div PUInt8(Right)^; end;
procedure lpeUInt16_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ div PInt8(Right)^; end;
procedure lpeUInt16_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ div PUInt16(Right)^; end;
procedure lpeUInt16_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ div PInt16(Right)^; end;
procedure lpeUInt16_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ div PUInt32(Right)^; end;
procedure lpeUInt16_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ div PInt32(Right)^; end;
procedure lpeUInt16_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ div PUInt64(Right)^; end;
procedure lpeUInt16_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ div PInt64(Right)^; end;
procedure lpeInt16_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ div PUInt8(Right)^; end;
procedure lpeInt16_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ div PInt8(Right)^; end;
procedure lpeInt16_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ div PUInt16(Right)^; end;
procedure lpeInt16_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ div PInt16(Right)^; end;
procedure lpeInt16_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ div PUInt32(Right)^; end;
procedure lpeInt16_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ div PInt32(Right)^; end;
procedure lpeInt16_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ div PUInt64(Right)^; end;
procedure lpeInt16_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ div PInt64(Right)^; end;
procedure lpeUInt32_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ div PUInt8(Right)^; end;
procedure lpeUInt32_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ div PInt8(Right)^; end;
procedure lpeUInt32_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ div PUInt16(Right)^; end;
procedure lpeUInt32_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ div PInt16(Right)^; end;
procedure lpeUInt32_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ div PUInt32(Right)^; end;
procedure lpeUInt32_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ div PInt32(Right)^; end;
procedure lpeUInt32_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ div PUInt64(Right)^; end;
procedure lpeUInt32_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ div PInt64(Right)^; end;
procedure lpeInt32_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ div PUInt8(Right)^; end;
procedure lpeInt32_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ div PInt8(Right)^; end;
procedure lpeInt32_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ div PUInt16(Right)^; end;
procedure lpeInt32_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ div PInt16(Right)^; end;
procedure lpeInt32_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ div PUInt32(Right)^; end;
procedure lpeInt32_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ div PInt32(Right)^; end;
procedure lpeInt32_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ div PUInt64(Right)^; end;
procedure lpeInt32_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ div PInt64(Right)^; end;
procedure lpeUInt64_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ div PUInt8(Right)^; end;
procedure lpeUInt64_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ div PInt8(Right)^; end;
procedure lpeUInt64_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ div PUInt16(Right)^; end;
procedure lpeUInt64_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ div PInt16(Right)^; end;
procedure lpeUInt64_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ div PUInt32(Right)^; end;
procedure lpeUInt64_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ div PInt32(Right)^; end;
procedure lpeUInt64_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ div PUInt64(Right)^; end;
procedure lpeUInt64_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ div PInt64(Right)^; end;
procedure lpeInt64_IDIV_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PUInt8(Right)^; end;
procedure lpeInt64_IDIV_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PInt8(Right)^; end;
procedure lpeInt64_IDIV_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PUInt16(Right)^; end;
procedure lpeInt64_IDIV_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PInt16(Right)^; end;
procedure lpeInt64_IDIV_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PUInt32(Right)^; end;
procedure lpeInt64_IDIV_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PInt32(Right)^; end;
procedure lpeInt64_IDIV_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PUInt64(Right)^; end;
procedure lpeInt64_IDIV_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ div PInt64(Right)^; end;
procedure lpeUInt8_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PUInt8(Right)^; end;
procedure lpeUInt8_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PInt8(Right)^; end;
procedure lpeUInt8_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PUInt16(Right)^; end;
procedure lpeUInt8_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PInt16(Right)^; end;
procedure lpeUInt8_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PUInt32(Right)^; end;
procedure lpeUInt8_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PInt32(Right)^; end;
procedure lpeUInt8_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PUInt64(Right)^; end;
procedure lpeUInt8_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PInt64(Right)^; end;
procedure lpeUInt8_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt8(Left)^ / PSingle(Right)^; end;
procedure lpeUInt8_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt8(Left)^ / PDouble(Right)^; end;
procedure lpeUInt8_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt8(Left)^ / PCurrency(Right)^; end;
procedure lpeUInt8_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ / PExtended(Right)^; end;
procedure lpeInt8_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PUInt8(Right)^; end;
procedure lpeInt8_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PInt8(Right)^; end;
procedure lpeInt8_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PUInt16(Right)^; end;
procedure lpeInt8_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PInt16(Right)^; end;
procedure lpeInt8_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PUInt32(Right)^; end;
procedure lpeInt8_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PInt32(Right)^; end;
procedure lpeInt8_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PUInt64(Right)^; end;
procedure lpeInt8_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PInt64(Right)^; end;
procedure lpeInt8_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt8(Left)^ / PSingle(Right)^; end;
procedure lpeInt8_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt8(Left)^ / PDouble(Right)^; end;
procedure lpeInt8_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt8(Left)^ / PCurrency(Right)^; end;
procedure lpeInt8_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ / PExtended(Right)^; end;
procedure lpeUInt16_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PUInt8(Right)^; end;
procedure lpeUInt16_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PInt8(Right)^; end;
procedure lpeUInt16_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PUInt16(Right)^; end;
procedure lpeUInt16_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PInt16(Right)^; end;
procedure lpeUInt16_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PUInt32(Right)^; end;
procedure lpeUInt16_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PInt32(Right)^; end;
procedure lpeUInt16_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PUInt64(Right)^; end;
procedure lpeUInt16_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PInt64(Right)^; end;
procedure lpeUInt16_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt16(Left)^ / PSingle(Right)^; end;
procedure lpeUInt16_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt16(Left)^ / PDouble(Right)^; end;
procedure lpeUInt16_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt16(Left)^ / PCurrency(Right)^; end;
procedure lpeUInt16_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ / PExtended(Right)^; end;
procedure lpeInt16_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PUInt8(Right)^; end;
procedure lpeInt16_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PInt8(Right)^; end;
procedure lpeInt16_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PUInt16(Right)^; end;
procedure lpeInt16_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PInt16(Right)^; end;
procedure lpeInt16_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PUInt32(Right)^; end;
procedure lpeInt16_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PInt32(Right)^; end;
procedure lpeInt16_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PUInt64(Right)^; end;
procedure lpeInt16_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PInt64(Right)^; end;
procedure lpeInt16_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt16(Left)^ / PSingle(Right)^; end;
procedure lpeInt16_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt16(Left)^ / PDouble(Right)^; end;
procedure lpeInt16_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt16(Left)^ / PCurrency(Right)^; end;
procedure lpeInt16_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ / PExtended(Right)^; end;
procedure lpeUInt32_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PUInt8(Right)^; end;
procedure lpeUInt32_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PInt8(Right)^; end;
procedure lpeUInt32_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PUInt16(Right)^; end;
procedure lpeUInt32_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PInt16(Right)^; end;
procedure lpeUInt32_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PUInt32(Right)^; end;
procedure lpeUInt32_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PInt32(Right)^; end;
procedure lpeUInt32_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PUInt64(Right)^; end;
procedure lpeUInt32_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PInt64(Right)^; end;
procedure lpeUInt32_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt32(Left)^ / PSingle(Right)^; end;
procedure lpeUInt32_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt32(Left)^ / PDouble(Right)^; end;
procedure lpeUInt32_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt32(Left)^ / PCurrency(Right)^; end;
procedure lpeUInt32_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ / PExtended(Right)^; end;
procedure lpeInt32_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PUInt8(Right)^; end;
procedure lpeInt32_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PInt8(Right)^; end;
procedure lpeInt32_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PUInt16(Right)^; end;
procedure lpeInt32_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PInt16(Right)^; end;
procedure lpeInt32_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PUInt32(Right)^; end;
procedure lpeInt32_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PInt32(Right)^; end;
procedure lpeInt32_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PUInt64(Right)^; end;
procedure lpeInt32_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PInt64(Right)^; end;
procedure lpeInt32_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt32(Left)^ / PSingle(Right)^; end;
procedure lpeInt32_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt32(Left)^ / PDouble(Right)^; end;
procedure lpeInt32_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt32(Left)^ / PCurrency(Right)^; end;
procedure lpeInt32_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ / PExtended(Right)^; end;
procedure lpeUInt64_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PUInt8(Right)^; end;
procedure lpeUInt64_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PInt8(Right)^; end;
procedure lpeUInt64_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PUInt16(Right)^; end;
procedure lpeUInt64_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PInt16(Right)^; end;
procedure lpeUInt64_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PUInt32(Right)^; end;
procedure lpeUInt64_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PInt32(Right)^; end;
procedure lpeUInt64_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PUInt64(Right)^; end;
procedure lpeUInt64_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PInt64(Right)^; end;
procedure lpeUInt64_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt64(Left)^ / PSingle(Right)^; end;
procedure lpeUInt64_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt64(Left)^ / PDouble(Right)^; end;
procedure lpeUInt64_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt64(Left)^ / PCurrency(Right)^; end;
procedure lpeUInt64_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ / PExtended(Right)^; end;
procedure lpeInt64_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PUInt8(Right)^; end;
procedure lpeInt64_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PInt8(Right)^; end;
procedure lpeInt64_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PUInt16(Right)^; end;
procedure lpeInt64_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PInt16(Right)^; end;
procedure lpeInt64_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PUInt32(Right)^; end;
procedure lpeInt64_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PInt32(Right)^; end;
procedure lpeInt64_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PUInt64(Right)^; end;
procedure lpeInt64_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PInt64(Right)^; end;
procedure lpeInt64_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt64(Left)^ / PSingle(Right)^; end;
procedure lpeInt64_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt64(Left)^ / PDouble(Right)^; end;
procedure lpeInt64_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt64(Left)^ / PCurrency(Right)^; end;
procedure lpeInt64_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ / PExtended(Right)^; end;
procedure lpeSingle_DIV_UInt8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PUInt8(Right)^; end;
procedure lpeSingle_DIV_Int8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PInt8(Right)^; end;
procedure lpeSingle_DIV_UInt16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PUInt16(Right)^; end;
procedure lpeSingle_DIV_Int16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PInt16(Right)^; end;
procedure lpeSingle_DIV_UInt32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PUInt32(Right)^; end;
procedure lpeSingle_DIV_Int32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PInt32(Right)^; end;
procedure lpeSingle_DIV_UInt64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PUInt64(Right)^; end;
procedure lpeSingle_DIV_Int64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PInt64(Right)^; end;
procedure lpeSingle_DIV_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ / PSingle(Right)^; end;
procedure lpeSingle_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PSingle(Left)^ / PDouble(Right)^; end;
procedure lpeSingle_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PSingle(Left)^ / PCurrency(Right)^; end;
procedure lpeSingle_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PSingle(Left)^ / PExtended(Right)^; end;
procedure lpeDouble_DIV_UInt8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PUInt8(Right)^; end;
procedure lpeDouble_DIV_Int8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PInt8(Right)^; end;
procedure lpeDouble_DIV_UInt16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PUInt16(Right)^; end;
procedure lpeDouble_DIV_Int16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PInt16(Right)^; end;
procedure lpeDouble_DIV_UInt32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PUInt32(Right)^; end;
procedure lpeDouble_DIV_Int32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PInt32(Right)^; end;
procedure lpeDouble_DIV_UInt64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PUInt64(Right)^; end;
procedure lpeDouble_DIV_Int64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PInt64(Right)^; end;
procedure lpeDouble_DIV_Single(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PSingle(Right)^; end;
procedure lpeDouble_DIV_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ / PDouble(Right)^; end;
procedure lpeDouble_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PDouble(Left)^ / PCurrency(Right)^; end;
procedure lpeDouble_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PDouble(Left)^ / PExtended(Right)^; end;
procedure lpeCurrency_DIV_UInt8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PUInt8(Right)^; end;
procedure lpeCurrency_DIV_Int8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PInt8(Right)^; end;
procedure lpeCurrency_DIV_UInt16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PUInt16(Right)^; end;
procedure lpeCurrency_DIV_Int16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PInt16(Right)^; end;
procedure lpeCurrency_DIV_UInt32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PUInt32(Right)^; end;
procedure lpeCurrency_DIV_Int32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PInt32(Right)^; end;
procedure lpeCurrency_DIV_UInt64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PUInt64(Right)^; end;
procedure lpeCurrency_DIV_Int64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PInt64(Right)^; end;
procedure lpeCurrency_DIV_Single(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PSingle(Right)^; end;
procedure lpeCurrency_DIV_Double(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PDouble(Right)^; end;
procedure lpeCurrency_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PCurrency(Right)^; end;
procedure lpeCurrency_DIV_Extended(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ / PExtended(Right)^; end;
procedure lpeExtended_DIV_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PUInt8(Right)^; end;
procedure lpeExtended_DIV_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PInt8(Right)^; end;
procedure lpeExtended_DIV_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PUInt16(Right)^; end;
procedure lpeExtended_DIV_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PInt16(Right)^; end;
procedure lpeExtended_DIV_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PUInt32(Right)^; end;
procedure lpeExtended_DIV_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PInt32(Right)^; end;
procedure lpeExtended_DIV_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PUInt64(Right)^; end;
procedure lpeExtended_DIV_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PInt64(Right)^; end;
procedure lpeExtended_DIV_Single(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PSingle(Right)^; end;
procedure lpeExtended_DIV_Double(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PDouble(Right)^; end;
procedure lpeExtended_DIV_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PExtended(Left)^ / PCurrency(Right)^; end;
procedure lpeExtended_DIV_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ / PExtended(Right)^; end;
procedure lpeUInt8_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ - PUInt8(Right)^; end;
procedure lpeUInt8_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ - PInt8(Right)^; end;
procedure lpeUInt8_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ - PUInt16(Right)^; end;
procedure lpeUInt8_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ - PInt16(Right)^; end;
procedure lpeUInt8_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ - PUInt32(Right)^; end;
procedure lpeUInt8_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ - PInt32(Right)^; end;
procedure lpeUInt8_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ - PUInt64(Right)^; end;
procedure lpeUInt8_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ - PInt64(Right)^; end;
procedure lpeUInt8_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt8(Left)^ - PSingle(Right)^; end;
procedure lpeUInt8_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt8(Left)^ - PDouble(Right)^; end;
procedure lpeUInt8_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt8(Left)^ - PCurrency(Right)^; end;
procedure lpeUInt8_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ - PExtended(Right)^; end;
procedure lpeInt8_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ - PUInt8(Right)^; end;
procedure lpeInt8_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ - PInt8(Right)^; end;
procedure lpeInt8_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ - PUInt16(Right)^; end;
procedure lpeInt8_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ - PInt16(Right)^; end;
procedure lpeInt8_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ - PUInt32(Right)^; end;
procedure lpeInt8_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ - PInt32(Right)^; end;
procedure lpeInt8_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^ - PUInt64(Right)^; end;
procedure lpeInt8_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ - PInt64(Right)^; end;
procedure lpeInt8_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt8(Left)^ - PSingle(Right)^; end;
procedure lpeInt8_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt8(Left)^ - PDouble(Right)^; end;
procedure lpeInt8_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt8(Left)^ - PCurrency(Right)^; end;
procedure lpeInt8_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ - PExtended(Right)^; end;
procedure lpeUInt16_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ - PUInt8(Right)^; end;
procedure lpeUInt16_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ - PInt8(Right)^; end;
procedure lpeUInt16_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ - PUInt16(Right)^; end;
procedure lpeUInt16_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ - PInt16(Right)^; end;
procedure lpeUInt16_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ - PUInt32(Right)^; end;
procedure lpeUInt16_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ - PInt32(Right)^; end;
procedure lpeUInt16_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ - PUInt64(Right)^; end;
procedure lpeUInt16_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ - PInt64(Right)^; end;
procedure lpeUInt16_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt16(Left)^ - PSingle(Right)^; end;
procedure lpeUInt16_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt16(Left)^ - PDouble(Right)^; end;
procedure lpeUInt16_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt16(Left)^ - PCurrency(Right)^; end;
procedure lpeUInt16_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ - PExtended(Right)^; end;
procedure lpeInt16_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ - PUInt8(Right)^; end;
procedure lpeInt16_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ - PInt8(Right)^; end;
procedure lpeInt16_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ - PUInt16(Right)^; end;
procedure lpeInt16_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ - PInt16(Right)^; end;
procedure lpeInt16_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ - PUInt32(Right)^; end;
procedure lpeInt16_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ - PInt32(Right)^; end;
procedure lpeInt16_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^ - PUInt64(Right)^; end;
procedure lpeInt16_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ - PInt64(Right)^; end;
procedure lpeInt16_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt16(Left)^ - PSingle(Right)^; end;
procedure lpeInt16_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt16(Left)^ - PDouble(Right)^; end;
procedure lpeInt16_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt16(Left)^ - PCurrency(Right)^; end;
procedure lpeInt16_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ - PExtended(Right)^; end;
procedure lpeUInt32_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PUInt8(Right)^; end;
procedure lpeUInt32_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PInt8(Right)^; end;
procedure lpeUInt32_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PUInt16(Right)^; end;
procedure lpeUInt32_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PInt16(Right)^; end;
procedure lpeUInt32_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PUInt32(Right)^; end;
procedure lpeUInt32_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PInt32(Right)^; end;
procedure lpeUInt32_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ - PUInt64(Right)^; end;
procedure lpeUInt32_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ - PInt64(Right)^; end;
procedure lpeUInt32_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt32(Left)^ - PSingle(Right)^; end;
procedure lpeUInt32_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt32(Left)^ - PDouble(Right)^; end;
procedure lpeUInt32_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt32(Left)^ - PCurrency(Right)^; end;
procedure lpeUInt32_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ - PExtended(Right)^; end;
procedure lpeInt32_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ - PUInt8(Right)^; end;
procedure lpeInt32_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ - PInt8(Right)^; end;
procedure lpeInt32_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ - PUInt16(Right)^; end;
procedure lpeInt32_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ - PInt16(Right)^; end;
procedure lpeInt32_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ - PUInt32(Right)^; end;
procedure lpeInt32_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ - PInt32(Right)^; end;
procedure lpeInt32_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^ - PUInt64(Right)^; end;
procedure lpeInt32_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ - PInt64(Right)^; end;
procedure lpeInt32_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt32(Left)^ - PSingle(Right)^; end;
procedure lpeInt32_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt32(Left)^ - PDouble(Right)^; end;
procedure lpeInt32_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt32(Left)^ - PCurrency(Right)^; end;
procedure lpeInt32_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ - PExtended(Right)^; end;
procedure lpeUInt64_SUB_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PUInt8(Right)^; end;
procedure lpeUInt64_SUB_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PInt8(Right)^; end;
procedure lpeUInt64_SUB_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PUInt16(Right)^; end;
procedure lpeUInt64_SUB_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PInt16(Right)^; end;
procedure lpeUInt64_SUB_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PUInt32(Right)^; end;
procedure lpeUInt64_SUB_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PInt32(Right)^; end;
procedure lpeUInt64_SUB_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ - PUInt64(Right)^; end;
procedure lpeUInt64_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ - PInt64(Right)^; end;
procedure lpeUInt64_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt64(Left)^ - PSingle(Right)^; end;
procedure lpeUInt64_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt64(Left)^ - PDouble(Right)^; end;
procedure lpeUInt64_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt64(Left)^ - PCurrency(Right)^; end;
procedure lpeUInt64_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ - PExtended(Right)^; end;
procedure lpeInt64_SUB_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PUInt8(Right)^; end;
procedure lpeInt64_SUB_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PInt8(Right)^; end;
procedure lpeInt64_SUB_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PUInt16(Right)^; end;
procedure lpeInt64_SUB_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PInt16(Right)^; end;
procedure lpeInt64_SUB_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PUInt32(Right)^; end;
procedure lpeInt64_SUB_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PInt32(Right)^; end;
procedure lpeInt64_SUB_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PUInt64(Right)^; end;
procedure lpeInt64_SUB_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ - PInt64(Right)^; end;
procedure lpeInt64_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt64(Left)^ - PSingle(Right)^; end;
procedure lpeInt64_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt64(Left)^ - PDouble(Right)^; end;
procedure lpeInt64_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt64(Left)^ - PCurrency(Right)^; end;
procedure lpeInt64_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ - PExtended(Right)^; end;
procedure lpeSingle_SUB_UInt8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PUInt8(Right)^; end;
procedure lpeSingle_SUB_Int8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PInt8(Right)^; end;
procedure lpeSingle_SUB_UInt16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PUInt16(Right)^; end;
procedure lpeSingle_SUB_Int16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PInt16(Right)^; end;
procedure lpeSingle_SUB_UInt32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PUInt32(Right)^; end;
procedure lpeSingle_SUB_Int32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PInt32(Right)^; end;
procedure lpeSingle_SUB_UInt64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PUInt64(Right)^; end;
procedure lpeSingle_SUB_Int64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PInt64(Right)^; end;
procedure lpeSingle_SUB_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ - PSingle(Right)^; end;
procedure lpeSingle_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PSingle(Left)^ - PDouble(Right)^; end;
procedure lpeSingle_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PSingle(Left)^ - PCurrency(Right)^; end;
procedure lpeSingle_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PSingle(Left)^ - PExtended(Right)^; end;
procedure lpeDouble_SUB_UInt8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PUInt8(Right)^; end;
procedure lpeDouble_SUB_Int8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PInt8(Right)^; end;
procedure lpeDouble_SUB_UInt16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PUInt16(Right)^; end;
procedure lpeDouble_SUB_Int16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PInt16(Right)^; end;
procedure lpeDouble_SUB_UInt32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PUInt32(Right)^; end;
procedure lpeDouble_SUB_Int32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PInt32(Right)^; end;
procedure lpeDouble_SUB_UInt64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PUInt64(Right)^; end;
procedure lpeDouble_SUB_Int64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PInt64(Right)^; end;
procedure lpeDouble_SUB_Single(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PSingle(Right)^; end;
procedure lpeDouble_SUB_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ - PDouble(Right)^; end;
procedure lpeDouble_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PDouble(Left)^ - PCurrency(Right)^; end;
procedure lpeDouble_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PDouble(Left)^ - PExtended(Right)^; end;
procedure lpeCurrency_SUB_UInt8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PUInt8(Right)^; end;
procedure lpeCurrency_SUB_Int8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PInt8(Right)^; end;
procedure lpeCurrency_SUB_UInt16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PUInt16(Right)^; end;
procedure lpeCurrency_SUB_Int16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PInt16(Right)^; end;
procedure lpeCurrency_SUB_UInt32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PUInt32(Right)^; end;
procedure lpeCurrency_SUB_Int32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PInt32(Right)^; end;
procedure lpeCurrency_SUB_UInt64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PUInt64(Right)^; end;
procedure lpeCurrency_SUB_Int64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PInt64(Right)^; end;
procedure lpeCurrency_SUB_Single(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PSingle(Right)^; end;
procedure lpeCurrency_SUB_Double(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PDouble(Right)^; end;
procedure lpeCurrency_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PCurrency(Right)^; end;
procedure lpeCurrency_SUB_Extended(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ - PExtended(Right)^; end;
procedure lpeExtended_SUB_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PUInt8(Right)^; end;
procedure lpeExtended_SUB_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PInt8(Right)^; end;
procedure lpeExtended_SUB_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PUInt16(Right)^; end;
procedure lpeExtended_SUB_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PInt16(Right)^; end;
procedure lpeExtended_SUB_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PUInt32(Right)^; end;
procedure lpeExtended_SUB_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PInt32(Right)^; end;
procedure lpeExtended_SUB_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PUInt64(Right)^; end;
procedure lpeExtended_SUB_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PInt64(Right)^; end;
procedure lpeExtended_SUB_Single(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PSingle(Right)^; end;
procedure lpeExtended_SUB_Double(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PDouble(Right)^; end;
procedure lpeExtended_SUB_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PExtended(Left)^ - PCurrency(Right)^; end;
procedure lpeExtended_SUB_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ - PExtended(Right)^; end;
procedure lpeUInt8_MOD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ mod PUInt8(Right)^; end;
procedure lpeUInt8_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ mod PInt8(Right)^; end;
procedure lpeUInt8_MOD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ mod PUInt16(Right)^; end;
procedure lpeUInt8_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ mod PInt16(Right)^; end;
procedure lpeUInt8_MOD_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ mod PUInt32(Right)^; end;
procedure lpeUInt8_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ mod PInt32(Right)^; end;
procedure lpeUInt8_MOD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ mod PUInt64(Right)^; end;
procedure lpeUInt8_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ mod PInt64(Right)^; end;
procedure lpeInt8_MOD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ mod PUInt8(Right)^; end;
procedure lpeInt8_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ mod PInt8(Right)^; end;
procedure lpeInt8_MOD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ mod PUInt16(Right)^; end;
procedure lpeInt8_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ mod PInt16(Right)^; end;
procedure lpeInt8_MOD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ mod PUInt32(Right)^; end;
procedure lpeInt8_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ mod PInt32(Right)^; end;
procedure lpeInt8_MOD_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ mod PUInt64(Right)^; end;
procedure lpeInt8_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ mod PInt64(Right)^; end;
procedure lpeUInt16_MOD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ mod PUInt8(Right)^; end;
procedure lpeUInt16_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ mod PInt8(Right)^; end;
procedure lpeUInt16_MOD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ mod PUInt16(Right)^; end;
procedure lpeUInt16_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ mod PInt16(Right)^; end;
procedure lpeUInt16_MOD_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ mod PUInt32(Right)^; end;
procedure lpeUInt16_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ mod PInt32(Right)^; end;
procedure lpeUInt16_MOD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ mod PUInt64(Right)^; end;
procedure lpeUInt16_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ mod PInt64(Right)^; end;
procedure lpeInt16_MOD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ mod PUInt8(Right)^; end;
procedure lpeInt16_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ mod PInt8(Right)^; end;
procedure lpeInt16_MOD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ mod PUInt16(Right)^; end;
procedure lpeInt16_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ mod PInt16(Right)^; end;
procedure lpeInt16_MOD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ mod PUInt32(Right)^; end;
procedure lpeInt16_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ mod PInt32(Right)^; end;
procedure lpeInt16_MOD_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ mod PUInt64(Right)^; end;
procedure lpeInt16_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ mod PInt64(Right)^; end;
procedure lpeUInt32_MOD_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ mod PUInt8(Right)^; end;
procedure lpeUInt32_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ mod PInt8(Right)^; end;
procedure lpeUInt32_MOD_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ mod PUInt16(Right)^; end;
procedure lpeUInt32_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ mod PInt16(Right)^; end;
procedure lpeUInt32_MOD_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ mod PUInt32(Right)^; end;
procedure lpeUInt32_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ mod PInt32(Right)^; end;
procedure lpeUInt32_MOD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ mod PUInt64(Right)^; end;
procedure lpeUInt32_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ mod PInt64(Right)^; end;
procedure lpeInt32_MOD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ mod PUInt8(Right)^; end;
procedure lpeInt32_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ mod PInt8(Right)^; end;
procedure lpeInt32_MOD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ mod PUInt16(Right)^; end;
procedure lpeInt32_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ mod PInt16(Right)^; end;
procedure lpeInt32_MOD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ mod PUInt32(Right)^; end;
procedure lpeInt32_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ mod PInt32(Right)^; end;
procedure lpeInt32_MOD_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ mod PUInt64(Right)^; end;
procedure lpeInt32_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ mod PInt64(Right)^; end;
procedure lpeUInt64_MOD_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ mod PUInt8(Right)^; end;
procedure lpeUInt64_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ mod PInt8(Right)^; end;
procedure lpeUInt64_MOD_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ mod PUInt16(Right)^; end;
procedure lpeUInt64_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ mod PInt16(Right)^; end;
procedure lpeUInt64_MOD_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ mod PUInt32(Right)^; end;
procedure lpeUInt64_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ mod PInt32(Right)^; end;
procedure lpeUInt64_MOD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ mod PUInt64(Right)^; end;
procedure lpeUInt64_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ mod PInt64(Right)^; end;
procedure lpeInt64_MOD_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PUInt8(Right)^; end;
procedure lpeInt64_MOD_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PInt8(Right)^; end;
procedure lpeInt64_MOD_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PUInt16(Right)^; end;
procedure lpeInt64_MOD_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PInt16(Right)^; end;
procedure lpeInt64_MOD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PUInt32(Right)^; end;
procedure lpeInt64_MOD_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PInt32(Right)^; end;
procedure lpeInt64_MOD_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PUInt64(Right)^; end;
procedure lpeInt64_MOD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ mod PInt64(Right)^; end;
procedure lpeUInt8_MUL_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ * PUInt8(Right)^; end;
procedure lpeUInt8_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ * PInt8(Right)^; end;
procedure lpeUInt8_MUL_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ * PUInt16(Right)^; end;
procedure lpeUInt8_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ * PInt16(Right)^; end;
procedure lpeUInt8_MUL_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ * PUInt32(Right)^; end;
procedure lpeUInt8_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ * PInt32(Right)^; end;
procedure lpeUInt8_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ * PUInt64(Right)^; end;
procedure lpeUInt8_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ * PInt64(Right)^; end;
procedure lpeUInt8_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt8(Left)^ * PSingle(Right)^; end;
procedure lpeUInt8_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt8(Left)^ * PDouble(Right)^; end;
procedure lpeUInt8_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt8(Left)^ * PCurrency(Right)^; end;
procedure lpeUInt8_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ * PExtended(Right)^; end;
procedure lpeInt8_MUL_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ * PUInt8(Right)^; end;
procedure lpeInt8_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ * PInt8(Right)^; end;
procedure lpeInt8_MUL_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ * PUInt16(Right)^; end;
procedure lpeInt8_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ * PInt16(Right)^; end;
procedure lpeInt8_MUL_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ * PUInt32(Right)^; end;
procedure lpeInt8_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ * PInt32(Right)^; end;
procedure lpeInt8_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^ * PUInt64(Right)^; end;
procedure lpeInt8_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ * PInt64(Right)^; end;
procedure lpeInt8_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt8(Left)^ * PSingle(Right)^; end;
procedure lpeInt8_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt8(Left)^ * PDouble(Right)^; end;
procedure lpeInt8_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt8(Left)^ * PCurrency(Right)^; end;
procedure lpeInt8_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ * PExtended(Right)^; end;
procedure lpeUInt16_MUL_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ * PUInt8(Right)^; end;
procedure lpeUInt16_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ * PInt8(Right)^; end;
procedure lpeUInt16_MUL_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ * PUInt16(Right)^; end;
procedure lpeUInt16_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ * PInt16(Right)^; end;
procedure lpeUInt16_MUL_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ * PUInt32(Right)^; end;
procedure lpeUInt16_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ * PInt32(Right)^; end;
procedure lpeUInt16_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ * PUInt64(Right)^; end;
procedure lpeUInt16_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ * PInt64(Right)^; end;
procedure lpeUInt16_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt16(Left)^ * PSingle(Right)^; end;
procedure lpeUInt16_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt16(Left)^ * PDouble(Right)^; end;
procedure lpeUInt16_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt16(Left)^ * PCurrency(Right)^; end;
procedure lpeUInt16_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ * PExtended(Right)^; end;
procedure lpeInt16_MUL_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ * PUInt8(Right)^; end;
procedure lpeInt16_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ * PInt8(Right)^; end;
procedure lpeInt16_MUL_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ * PUInt16(Right)^; end;
procedure lpeInt16_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ * PInt16(Right)^; end;
procedure lpeInt16_MUL_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ * PUInt32(Right)^; end;
procedure lpeInt16_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ * PInt32(Right)^; end;
procedure lpeInt16_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^ * PUInt64(Right)^; end;
procedure lpeInt16_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ * PInt64(Right)^; end;
procedure lpeInt16_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt16(Left)^ * PSingle(Right)^; end;
procedure lpeInt16_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt16(Left)^ * PDouble(Right)^; end;
procedure lpeInt16_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt16(Left)^ * PCurrency(Right)^; end;
procedure lpeInt16_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ * PExtended(Right)^; end;
procedure lpeUInt32_MUL_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ * PUInt8(Right)^; end;
procedure lpeUInt32_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ * PInt8(Right)^; end;
procedure lpeUInt32_MUL_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ * PUInt16(Right)^; end;
procedure lpeUInt32_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ * PInt16(Right)^; end;
procedure lpeUInt32_MUL_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ * PUInt32(Right)^; end;
procedure lpeUInt32_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ * PInt32(Right)^; end;
procedure lpeUInt32_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ * PUInt64(Right)^; end;
procedure lpeUInt32_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ * PInt64(Right)^; end;
procedure lpeUInt32_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt32(Left)^ * PSingle(Right)^; end;
procedure lpeUInt32_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt32(Left)^ * PDouble(Right)^; end;
procedure lpeUInt32_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt32(Left)^ * PCurrency(Right)^; end;
procedure lpeUInt32_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ * PExtended(Right)^; end;
procedure lpeInt32_MUL_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ * PUInt8(Right)^; end;
procedure lpeInt32_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ * PInt8(Right)^; end;
procedure lpeInt32_MUL_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ * PUInt16(Right)^; end;
procedure lpeInt32_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ * PInt16(Right)^; end;
procedure lpeInt32_MUL_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ * PUInt32(Right)^; end;
procedure lpeInt32_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ * PInt32(Right)^; end;
procedure lpeInt32_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^ * PUInt64(Right)^; end;
procedure lpeInt32_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ * PInt64(Right)^; end;
procedure lpeInt32_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt32(Left)^ * PSingle(Right)^; end;
procedure lpeInt32_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt32(Left)^ * PDouble(Right)^; end;
procedure lpeInt32_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt32(Left)^ * PCurrency(Right)^; end;
procedure lpeInt32_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ * PExtended(Right)^; end;
procedure lpeUInt64_MUL_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PUInt8(Right)^; end;
procedure lpeUInt64_MUL_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PInt8(Right)^; end;
procedure lpeUInt64_MUL_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PUInt16(Right)^; end;
procedure lpeUInt64_MUL_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PInt16(Right)^; end;
procedure lpeUInt64_MUL_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PUInt32(Right)^; end;
procedure lpeUInt64_MUL_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PInt32(Right)^; end;
procedure lpeUInt64_MUL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ * PUInt64(Right)^; end;
procedure lpeUInt64_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ * PInt64(Right)^; end;
procedure lpeUInt64_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt64(Left)^ * PSingle(Right)^; end;
procedure lpeUInt64_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt64(Left)^ * PDouble(Right)^; end;
procedure lpeUInt64_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt64(Left)^ * PCurrency(Right)^; end;
procedure lpeUInt64_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ * PExtended(Right)^; end;
procedure lpeInt64_MUL_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PUInt8(Right)^; end;
procedure lpeInt64_MUL_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PInt8(Right)^; end;
procedure lpeInt64_MUL_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PUInt16(Right)^; end;
procedure lpeInt64_MUL_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PInt16(Right)^; end;
procedure lpeInt64_MUL_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PUInt32(Right)^; end;
procedure lpeInt64_MUL_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PInt32(Right)^; end;
procedure lpeInt64_MUL_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PUInt64(Right)^; end;
procedure lpeInt64_MUL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ * PInt64(Right)^; end;
procedure lpeInt64_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt64(Left)^ * PSingle(Right)^; end;
procedure lpeInt64_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt64(Left)^ * PDouble(Right)^; end;
procedure lpeInt64_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt64(Left)^ * PCurrency(Right)^; end;
procedure lpeInt64_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ * PExtended(Right)^; end;
procedure lpeSingle_MUL_UInt8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PUInt8(Right)^; end;
procedure lpeSingle_MUL_Int8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PInt8(Right)^; end;
procedure lpeSingle_MUL_UInt16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PUInt16(Right)^; end;
procedure lpeSingle_MUL_Int16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PInt16(Right)^; end;
procedure lpeSingle_MUL_UInt32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PUInt32(Right)^; end;
procedure lpeSingle_MUL_Int32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PInt32(Right)^; end;
procedure lpeSingle_MUL_UInt64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PUInt64(Right)^; end;
procedure lpeSingle_MUL_Int64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PInt64(Right)^; end;
procedure lpeSingle_MUL_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ * PSingle(Right)^; end;
procedure lpeSingle_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PSingle(Left)^ * PDouble(Right)^; end;
procedure lpeSingle_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PSingle(Left)^ * PCurrency(Right)^; end;
procedure lpeSingle_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PSingle(Left)^ * PExtended(Right)^; end;
procedure lpeDouble_MUL_UInt8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PUInt8(Right)^; end;
procedure lpeDouble_MUL_Int8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PInt8(Right)^; end;
procedure lpeDouble_MUL_UInt16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PUInt16(Right)^; end;
procedure lpeDouble_MUL_Int16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PInt16(Right)^; end;
procedure lpeDouble_MUL_UInt32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PUInt32(Right)^; end;
procedure lpeDouble_MUL_Int32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PInt32(Right)^; end;
procedure lpeDouble_MUL_UInt64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PUInt64(Right)^; end;
procedure lpeDouble_MUL_Int64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PInt64(Right)^; end;
procedure lpeDouble_MUL_Single(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PSingle(Right)^; end;
procedure lpeDouble_MUL_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ * PDouble(Right)^; end;
procedure lpeDouble_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PDouble(Left)^ * PCurrency(Right)^; end;
procedure lpeDouble_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PDouble(Left)^ * PExtended(Right)^; end;
procedure lpeCurrency_MUL_UInt8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PUInt8(Right)^; end;
procedure lpeCurrency_MUL_Int8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PInt8(Right)^; end;
procedure lpeCurrency_MUL_UInt16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PUInt16(Right)^; end;
procedure lpeCurrency_MUL_Int16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PInt16(Right)^; end;
procedure lpeCurrency_MUL_UInt32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PUInt32(Right)^; end;
procedure lpeCurrency_MUL_Int32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PInt32(Right)^; end;
procedure lpeCurrency_MUL_UInt64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PUInt64(Right)^; end;
procedure lpeCurrency_MUL_Int64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PInt64(Right)^; end;
procedure lpeCurrency_MUL_Single(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PSingle(Right)^; end;
procedure lpeCurrency_MUL_Double(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PDouble(Right)^; end;
procedure lpeCurrency_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PCurrency(Right)^; end;
procedure lpeCurrency_MUL_Extended(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ * PExtended(Right)^; end;
procedure lpeExtended_MUL_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PUInt8(Right)^; end;
procedure lpeExtended_MUL_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PInt8(Right)^; end;
procedure lpeExtended_MUL_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PUInt16(Right)^; end;
procedure lpeExtended_MUL_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PInt16(Right)^; end;
procedure lpeExtended_MUL_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PUInt32(Right)^; end;
procedure lpeExtended_MUL_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PInt32(Right)^; end;
procedure lpeExtended_MUL_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PUInt64(Right)^; end;
procedure lpeExtended_MUL_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PInt64(Right)^; end;
procedure lpeExtended_MUL_Single(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PSingle(Right)^; end;
procedure lpeExtended_MUL_Double(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PDouble(Right)^; end;
procedure lpeExtended_MUL_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PExtended(Left)^ * PCurrency(Right)^; end;
procedure lpeExtended_MUL_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ * PExtended(Right)^; end;
procedure lpeUInt8_NOT(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := not PUInt8(Left)^; end;
procedure lpeInt8_NOT(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := not PInt8(Left)^; end;
procedure lpeUInt16_NOT(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := not PUInt16(Left)^; end;
procedure lpeInt16_NOT(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := not PInt16(Left)^; end;
procedure lpeUInt32_NOT(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := not PUInt32(Left)^; end;
procedure lpeInt32_NOT(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := not PInt32(Left)^; end;
procedure lpeUInt64_NOT(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := not PUInt64(Left)^; end;
procedure lpeInt64_NOT(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := not PInt64(Left)^; end;
procedure lpeBoolean_NOT(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := not PBoolean(Left)^; end;
procedure lpeUInt8_OR_UInt8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt8(Left)^ or PUInt8(Right)^; end;
procedure lpeUInt8_OR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ or PInt8(Right)^; end;
procedure lpeUInt8_OR_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt8(Left)^ or PUInt16(Right)^; end;
procedure lpeUInt8_OR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ or PInt16(Right)^; end;
procedure lpeUInt8_OR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ or PUInt32(Right)^; end;
procedure lpeUInt8_OR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ or PInt32(Right)^; end;
procedure lpeUInt8_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ or PUInt64(Right)^; end;
procedure lpeUInt8_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ or PInt64(Right)^; end;
procedure lpeInt8_OR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ or PUInt8(Right)^; end;
procedure lpeInt8_OR_Int8(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt8(Left)^ or PInt8(Right)^; end;
procedure lpeInt8_OR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ or PUInt16(Right)^; end;
procedure lpeInt8_OR_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt8(Left)^ or PInt16(Right)^; end;
procedure lpeInt8_OR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ or PUInt32(Right)^; end;
procedure lpeInt8_OR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ or PInt32(Right)^; end;
procedure lpeInt8_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^ or PUInt64(Right)^; end;
procedure lpeInt8_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ or PInt64(Right)^; end;
procedure lpeUInt16_OR_UInt8(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ or PUInt8(Right)^; end;
procedure lpeUInt16_OR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ or PInt8(Right)^; end;
procedure lpeUInt16_OR_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ or PUInt16(Right)^; end;
procedure lpeUInt16_OR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ or PInt16(Right)^; end;
procedure lpeUInt16_OR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ or PUInt32(Right)^; end;
procedure lpeUInt16_OR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ or PInt32(Right)^; end;
procedure lpeUInt16_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ or PUInt64(Right)^; end;
procedure lpeUInt16_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ or PInt64(Right)^; end;
procedure lpeInt16_OR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ or PUInt8(Right)^; end;
procedure lpeInt16_OR_Int8(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ or PInt8(Right)^; end;
procedure lpeInt16_OR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ or PUInt16(Right)^; end;
procedure lpeInt16_OR_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ or PInt16(Right)^; end;
procedure lpeInt16_OR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ or PUInt32(Right)^; end;
procedure lpeInt16_OR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ or PInt32(Right)^; end;
procedure lpeInt16_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^ or PUInt64(Right)^; end;
procedure lpeInt16_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ or PInt64(Right)^; end;
procedure lpeUInt32_OR_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ or PUInt8(Right)^; end;
procedure lpeUInt32_OR_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ or PInt8(Right)^; end;
procedure lpeUInt32_OR_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ or PUInt16(Right)^; end;
procedure lpeUInt32_OR_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ or PInt16(Right)^; end;
procedure lpeUInt32_OR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ or PUInt32(Right)^; end;
procedure lpeUInt32_OR_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ or PInt32(Right)^; end;
procedure lpeUInt32_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ or PUInt64(Right)^; end;
procedure lpeUInt32_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ or PInt64(Right)^; end;
procedure lpeInt32_OR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ or PUInt8(Right)^; end;
procedure lpeInt32_OR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ or PInt8(Right)^; end;
procedure lpeInt32_OR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ or PUInt16(Right)^; end;
procedure lpeInt32_OR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ or PInt16(Right)^; end;
procedure lpeInt32_OR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ or PUInt32(Right)^; end;
procedure lpeInt32_OR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ or PInt32(Right)^; end;
procedure lpeInt32_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^ or PUInt64(Right)^; end;
procedure lpeInt32_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ or PInt64(Right)^; end;
procedure lpeUInt64_OR_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PUInt8(Right)^; end;
procedure lpeUInt64_OR_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PInt8(Right)^; end;
procedure lpeUInt64_OR_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PUInt16(Right)^; end;
procedure lpeUInt64_OR_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PInt16(Right)^; end;
procedure lpeUInt64_OR_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PUInt32(Right)^; end;
procedure lpeUInt64_OR_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PInt32(Right)^; end;
procedure lpeUInt64_OR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ or PUInt64(Right)^; end;
procedure lpeUInt64_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ or PInt64(Right)^; end;
procedure lpeInt64_OR_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PUInt8(Right)^; end;
procedure lpeInt64_OR_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PInt8(Right)^; end;
procedure lpeInt64_OR_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PUInt16(Right)^; end;
procedure lpeInt64_OR_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PInt16(Right)^; end;
procedure lpeInt64_OR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PUInt32(Right)^; end;
procedure lpeInt64_OR_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PInt32(Right)^; end;
procedure lpeInt64_OR_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PUInt64(Right)^; end;
procedure lpeInt64_OR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ or PInt64(Right)^; end;
procedure lpeBoolean_OR_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ or PBoolean(Right)^; end;
procedure lpeUInt8_ADD_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ + PUInt8(Right)^; end;
procedure lpeUInt8_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ + PInt8(Right)^; end;
procedure lpeUInt8_ADD_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ + PUInt16(Right)^; end;
procedure lpeUInt8_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ + PInt16(Right)^; end;
procedure lpeUInt8_ADD_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ + PUInt32(Right)^; end;
procedure lpeUInt8_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ + PInt32(Right)^; end;
procedure lpeUInt8_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ + PUInt64(Right)^; end;
procedure lpeUInt8_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ + PInt64(Right)^; end;
procedure lpeUInt8_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt8(Left)^ + PSingle(Right)^; end;
procedure lpeUInt8_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt8(Left)^ + PDouble(Right)^; end;
procedure lpeUInt8_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt8(Left)^ + PCurrency(Right)^; end;
procedure lpeUInt8_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt8(Left)^ + PExtended(Right)^; end;
procedure lpeInt8_ADD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ + PUInt8(Right)^; end;
procedure lpeInt8_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ + PInt8(Right)^; end;
procedure lpeInt8_ADD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ + PUInt16(Right)^; end;
procedure lpeInt8_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ + PInt16(Right)^; end;
procedure lpeInt8_ADD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ + PUInt32(Right)^; end;
procedure lpeInt8_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ + PInt32(Right)^; end;
procedure lpeInt8_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^ + PUInt64(Right)^; end;
procedure lpeInt8_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ + PInt64(Right)^; end;
procedure lpeInt8_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt8(Left)^ + PSingle(Right)^; end;
procedure lpeInt8_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt8(Left)^ + PDouble(Right)^; end;
procedure lpeInt8_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt8(Left)^ + PCurrency(Right)^; end;
procedure lpeInt8_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt8(Left)^ + PExtended(Right)^; end;
procedure lpeUInt16_ADD_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ + PUInt8(Right)^; end;
procedure lpeUInt16_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ + PInt8(Right)^; end;
procedure lpeUInt16_ADD_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ + PUInt16(Right)^; end;
procedure lpeUInt16_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ + PInt16(Right)^; end;
procedure lpeUInt16_ADD_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ + PUInt32(Right)^; end;
procedure lpeUInt16_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ + PInt32(Right)^; end;
procedure lpeUInt16_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ + PUInt64(Right)^; end;
procedure lpeUInt16_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ + PInt64(Right)^; end;
procedure lpeUInt16_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt16(Left)^ + PSingle(Right)^; end;
procedure lpeUInt16_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt16(Left)^ + PDouble(Right)^; end;
procedure lpeUInt16_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt16(Left)^ + PCurrency(Right)^; end;
procedure lpeUInt16_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt16(Left)^ + PExtended(Right)^; end;
procedure lpeInt16_ADD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ + PUInt8(Right)^; end;
procedure lpeInt16_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ + PInt8(Right)^; end;
procedure lpeInt16_ADD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ + PUInt16(Right)^; end;
procedure lpeInt16_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ + PInt16(Right)^; end;
procedure lpeInt16_ADD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ + PUInt32(Right)^; end;
procedure lpeInt16_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ + PInt32(Right)^; end;
procedure lpeInt16_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^ + PUInt64(Right)^; end;
procedure lpeInt16_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ + PInt64(Right)^; end;
procedure lpeInt16_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt16(Left)^ + PSingle(Right)^; end;
procedure lpeInt16_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt16(Left)^ + PDouble(Right)^; end;
procedure lpeInt16_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt16(Left)^ + PCurrency(Right)^; end;
procedure lpeInt16_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt16(Left)^ + PExtended(Right)^; end;
procedure lpeUInt32_ADD_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ + PUInt8(Right)^; end;
procedure lpeUInt32_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ + PInt8(Right)^; end;
procedure lpeUInt32_ADD_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ + PUInt16(Right)^; end;
procedure lpeUInt32_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ + PInt16(Right)^; end;
procedure lpeUInt32_ADD_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ + PUInt32(Right)^; end;
procedure lpeUInt32_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ + PInt32(Right)^; end;
procedure lpeUInt32_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ + PUInt64(Right)^; end;
procedure lpeUInt32_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ + PInt64(Right)^; end;
procedure lpeUInt32_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt32(Left)^ + PSingle(Right)^; end;
procedure lpeUInt32_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt32(Left)^ + PDouble(Right)^; end;
procedure lpeUInt32_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt32(Left)^ + PCurrency(Right)^; end;
procedure lpeUInt32_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt32(Left)^ + PExtended(Right)^; end;
procedure lpeInt32_ADD_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ + PUInt8(Right)^; end;
procedure lpeInt32_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ + PInt8(Right)^; end;
procedure lpeInt32_ADD_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ + PUInt16(Right)^; end;
procedure lpeInt32_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ + PInt16(Right)^; end;
procedure lpeInt32_ADD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ + PUInt32(Right)^; end;
procedure lpeInt32_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ + PInt32(Right)^; end;
procedure lpeInt32_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^ + PUInt64(Right)^; end;
procedure lpeInt32_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ + PInt64(Right)^; end;
procedure lpeInt32_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt32(Left)^ + PSingle(Right)^; end;
procedure lpeInt32_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt32(Left)^ + PDouble(Right)^; end;
procedure lpeInt32_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt32(Left)^ + PCurrency(Right)^; end;
procedure lpeInt32_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt32(Left)^ + PExtended(Right)^; end;
procedure lpeUInt64_ADD_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PUInt8(Right)^; end;
procedure lpeUInt64_ADD_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PInt8(Right)^; end;
procedure lpeUInt64_ADD_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PUInt16(Right)^; end;
procedure lpeUInt64_ADD_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PInt16(Right)^; end;
procedure lpeUInt64_ADD_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PUInt32(Right)^; end;
procedure lpeUInt64_ADD_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PInt32(Right)^; end;
procedure lpeUInt64_ADD_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ + PUInt64(Right)^; end;
procedure lpeUInt64_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ + PInt64(Right)^; end;
procedure lpeUInt64_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PUInt64(Left)^ + PSingle(Right)^; end;
procedure lpeUInt64_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PUInt64(Left)^ + PDouble(Right)^; end;
procedure lpeUInt64_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PUInt64(Left)^ + PCurrency(Right)^; end;
procedure lpeUInt64_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PUInt64(Left)^ + PExtended(Right)^; end;
procedure lpeInt64_ADD_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PUInt8(Right)^; end;
procedure lpeInt64_ADD_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PInt8(Right)^; end;
procedure lpeInt64_ADD_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PUInt16(Right)^; end;
procedure lpeInt64_ADD_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PInt16(Right)^; end;
procedure lpeInt64_ADD_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PUInt32(Right)^; end;
procedure lpeInt64_ADD_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PInt32(Right)^; end;
procedure lpeInt64_ADD_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PUInt64(Right)^; end;
procedure lpeInt64_ADD_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ + PInt64(Right)^; end;
procedure lpeInt64_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PInt64(Left)^ + PSingle(Right)^; end;
procedure lpeInt64_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PInt64(Left)^ + PDouble(Right)^; end;
procedure lpeInt64_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PInt64(Left)^ + PCurrency(Right)^; end;
procedure lpeInt64_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PInt64(Left)^ + PExtended(Right)^; end;
procedure lpeSingle_ADD_UInt8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PUInt8(Right)^; end;
procedure lpeSingle_ADD_Int8(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PInt8(Right)^; end;
procedure lpeSingle_ADD_UInt16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PUInt16(Right)^; end;
procedure lpeSingle_ADD_Int16(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PInt16(Right)^; end;
procedure lpeSingle_ADD_UInt32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PUInt32(Right)^; end;
procedure lpeSingle_ADD_Int32(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PInt32(Right)^; end;
procedure lpeSingle_ADD_UInt64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PUInt64(Right)^; end;
procedure lpeSingle_ADD_Int64(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PInt64(Right)^; end;
procedure lpeSingle_ADD_Single(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := PSingle(Left)^ + PSingle(Right)^; end;
procedure lpeSingle_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PSingle(Left)^ + PDouble(Right)^; end;
procedure lpeSingle_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PSingle(Left)^ + PCurrency(Right)^; end;
procedure lpeSingle_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PSingle(Left)^ + PExtended(Right)^; end;
procedure lpeDouble_ADD_UInt8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PUInt8(Right)^; end;
procedure lpeDouble_ADD_Int8(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PInt8(Right)^; end;
procedure lpeDouble_ADD_UInt16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PUInt16(Right)^; end;
procedure lpeDouble_ADD_Int16(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PInt16(Right)^; end;
procedure lpeDouble_ADD_UInt32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PUInt32(Right)^; end;
procedure lpeDouble_ADD_Int32(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PInt32(Right)^; end;
procedure lpeDouble_ADD_UInt64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PUInt64(Right)^; end;
procedure lpeDouble_ADD_Int64(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PInt64(Right)^; end;
procedure lpeDouble_ADD_Single(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PSingle(Right)^; end;
procedure lpeDouble_ADD_Double(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := PDouble(Left)^ + PDouble(Right)^; end;
procedure lpeDouble_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PDouble(Left)^ + PCurrency(Right)^; end;
procedure lpeDouble_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PDouble(Left)^ + PExtended(Right)^; end;
procedure lpeCurrency_ADD_UInt8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PUInt8(Right)^; end;
procedure lpeCurrency_ADD_Int8(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PInt8(Right)^; end;
procedure lpeCurrency_ADD_UInt16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PUInt16(Right)^; end;
procedure lpeCurrency_ADD_Int16(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PInt16(Right)^; end;
procedure lpeCurrency_ADD_UInt32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PUInt32(Right)^; end;
procedure lpeCurrency_ADD_Int32(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PInt32(Right)^; end;
procedure lpeCurrency_ADD_UInt64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PUInt64(Right)^; end;
procedure lpeCurrency_ADD_Int64(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PInt64(Right)^; end;
procedure lpeCurrency_ADD_Single(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PSingle(Right)^; end;
procedure lpeCurrency_ADD_Double(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PDouble(Right)^; end;
procedure lpeCurrency_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PCurrency(Right)^; end;
procedure lpeCurrency_ADD_Extended(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PCurrency(Left)^ + PExtended(Right)^; end;
procedure lpeExtended_ADD_UInt8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PUInt8(Right)^; end;
procedure lpeExtended_ADD_Int8(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PInt8(Right)^; end;
procedure lpeExtended_ADD_UInt16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PUInt16(Right)^; end;
procedure lpeExtended_ADD_Int16(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PInt16(Right)^; end;
procedure lpeExtended_ADD_UInt32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PUInt32(Right)^; end;
procedure lpeExtended_ADD_Int32(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PInt32(Right)^; end;
procedure lpeExtended_ADD_UInt64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PUInt64(Right)^; end;
procedure lpeExtended_ADD_Int64(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PInt64(Right)^; end;
procedure lpeExtended_ADD_Single(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PSingle(Right)^; end;
procedure lpeExtended_ADD_Double(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PDouble(Right)^; end;
procedure lpeExtended_ADD_Currency(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := PExtended(Left)^ + PCurrency(Right)^; end;
procedure lpeExtended_ADD_Extended(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := PExtended(Left)^ + PExtended(Right)^; end;
procedure lpeAnsiString_ADD_AnsiString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiString(Left)^ + PAnsiString(Right)^; end;
procedure lpeWideString_ADD_WideString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^ + PWideString(Right)^; end;
procedure lpeUInt8_SHL_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PUInt8(Right)^; end;
procedure lpeUInt8_SHL_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PInt8(Right)^; end;
procedure lpeUInt8_SHL_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PUInt16(Right)^; end;
procedure lpeUInt8_SHL_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PInt16(Right)^; end;
procedure lpeUInt8_SHL_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PUInt32(Right)^; end;
procedure lpeUInt8_SHL_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PInt32(Right)^; end;
procedure lpeUInt8_SHL_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PUInt64(Right)^; end;
procedure lpeUInt8_SHL_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shl PInt64(Right)^; end;
procedure lpeInt8_SHL_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PUInt8(Right)^; end;
procedure lpeInt8_SHL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PInt8(Right)^; end;
procedure lpeInt8_SHL_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PUInt16(Right)^; end;
procedure lpeInt8_SHL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PInt16(Right)^; end;
procedure lpeInt8_SHL_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PUInt32(Right)^; end;
procedure lpeInt8_SHL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PInt32(Right)^; end;
procedure lpeInt8_SHL_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PUInt64(Right)^; end;
procedure lpeInt8_SHL_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shl PInt64(Right)^; end;
procedure lpeUInt16_SHL_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PUInt8(Right)^; end;
procedure lpeUInt16_SHL_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PInt8(Right)^; end;
procedure lpeUInt16_SHL_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PUInt16(Right)^; end;
procedure lpeUInt16_SHL_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PInt16(Right)^; end;
procedure lpeUInt16_SHL_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PUInt32(Right)^; end;
procedure lpeUInt16_SHL_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PInt32(Right)^; end;
procedure lpeUInt16_SHL_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PUInt64(Right)^; end;
procedure lpeUInt16_SHL_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shl PInt64(Right)^; end;
procedure lpeInt16_SHL_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PUInt8(Right)^; end;
procedure lpeInt16_SHL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PInt8(Right)^; end;
procedure lpeInt16_SHL_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PUInt16(Right)^; end;
procedure lpeInt16_SHL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PInt16(Right)^; end;
procedure lpeInt16_SHL_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PUInt32(Right)^; end;
procedure lpeInt16_SHL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PInt32(Right)^; end;
procedure lpeInt16_SHL_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PUInt64(Right)^; end;
procedure lpeInt16_SHL_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shl PInt64(Right)^; end;
procedure lpeUInt32_SHL_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PUInt8(Right)^; end;
procedure lpeUInt32_SHL_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PInt8(Right)^; end;
procedure lpeUInt32_SHL_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PUInt16(Right)^; end;
procedure lpeUInt32_SHL_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PInt16(Right)^; end;
procedure lpeUInt32_SHL_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PUInt32(Right)^; end;
procedure lpeUInt32_SHL_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PInt32(Right)^; end;
procedure lpeUInt32_SHL_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PUInt64(Right)^; end;
procedure lpeUInt32_SHL_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shl PInt64(Right)^; end;
procedure lpeInt32_SHL_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PUInt8(Right)^; end;
procedure lpeInt32_SHL_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PInt8(Right)^; end;
procedure lpeInt32_SHL_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PUInt16(Right)^; end;
procedure lpeInt32_SHL_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PInt16(Right)^; end;
procedure lpeInt32_SHL_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PUInt32(Right)^; end;
procedure lpeInt32_SHL_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PInt32(Right)^; end;
procedure lpeInt32_SHL_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PUInt64(Right)^; end;
procedure lpeInt32_SHL_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shl PInt64(Right)^; end;
procedure lpeUInt64_SHL_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PUInt8(Right)^; end;
procedure lpeUInt64_SHL_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PInt8(Right)^; end;
procedure lpeUInt64_SHL_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PUInt16(Right)^; end;
procedure lpeUInt64_SHL_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PInt16(Right)^; end;
procedure lpeUInt64_SHL_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PUInt32(Right)^; end;
procedure lpeUInt64_SHL_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PInt32(Right)^; end;
procedure lpeUInt64_SHL_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PUInt64(Right)^; end;
procedure lpeUInt64_SHL_Int64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shl PInt64(Right)^; end;
procedure lpeInt64_SHL_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PUInt8(Right)^; end;
procedure lpeInt64_SHL_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PInt8(Right)^; end;
procedure lpeInt64_SHL_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PUInt16(Right)^; end;
procedure lpeInt64_SHL_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PInt16(Right)^; end;
procedure lpeInt64_SHL_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PUInt32(Right)^; end;
procedure lpeInt64_SHL_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PInt32(Right)^; end;
procedure lpeInt64_SHL_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PUInt64(Right)^; end;
procedure lpeInt64_SHL_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shl PInt64(Right)^; end;
procedure lpeUInt8_SHR_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PUInt8(Right)^; end;
procedure lpeUInt8_SHR_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PInt8(Right)^; end;
procedure lpeUInt8_SHR_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PUInt16(Right)^; end;
procedure lpeUInt8_SHR_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PInt16(Right)^; end;
procedure lpeUInt8_SHR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PUInt32(Right)^; end;
procedure lpeUInt8_SHR_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PInt32(Right)^; end;
procedure lpeUInt8_SHR_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PUInt64(Right)^; end;
procedure lpeUInt8_SHR_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ shr PInt64(Right)^; end;
procedure lpeInt8_SHR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PUInt8(Right)^; end;
procedure lpeInt8_SHR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PInt8(Right)^; end;
procedure lpeInt8_SHR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PUInt16(Right)^; end;
procedure lpeInt8_SHR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PInt16(Right)^; end;
procedure lpeInt8_SHR_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PUInt32(Right)^; end;
procedure lpeInt8_SHR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PInt32(Right)^; end;
procedure lpeInt8_SHR_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PUInt64(Right)^; end;
procedure lpeInt8_SHR_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ shr PInt64(Right)^; end;
procedure lpeUInt16_SHR_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PUInt8(Right)^; end;
procedure lpeUInt16_SHR_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PInt8(Right)^; end;
procedure lpeUInt16_SHR_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PUInt16(Right)^; end;
procedure lpeUInt16_SHR_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PInt16(Right)^; end;
procedure lpeUInt16_SHR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PUInt32(Right)^; end;
procedure lpeUInt16_SHR_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PInt32(Right)^; end;
procedure lpeUInt16_SHR_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PUInt64(Right)^; end;
procedure lpeUInt16_SHR_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ shr PInt64(Right)^; end;
procedure lpeInt16_SHR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PUInt8(Right)^; end;
procedure lpeInt16_SHR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PInt8(Right)^; end;
procedure lpeInt16_SHR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PUInt16(Right)^; end;
procedure lpeInt16_SHR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PInt16(Right)^; end;
procedure lpeInt16_SHR_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PUInt32(Right)^; end;
procedure lpeInt16_SHR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PInt32(Right)^; end;
procedure lpeInt16_SHR_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PUInt64(Right)^; end;
procedure lpeInt16_SHR_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ shr PInt64(Right)^; end;
procedure lpeUInt32_SHR_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PUInt8(Right)^; end;
procedure lpeUInt32_SHR_Int8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PInt8(Right)^; end;
procedure lpeUInt32_SHR_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PUInt16(Right)^; end;
procedure lpeUInt32_SHR_Int16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PInt16(Right)^; end;
procedure lpeUInt32_SHR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PUInt32(Right)^; end;
procedure lpeUInt32_SHR_Int32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PInt32(Right)^; end;
procedure lpeUInt32_SHR_UInt64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PUInt64(Right)^; end;
procedure lpeUInt32_SHR_Int64(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ shr PInt64(Right)^; end;
procedure lpeInt32_SHR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PUInt8(Right)^; end;
procedure lpeInt32_SHR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PInt8(Right)^; end;
procedure lpeInt32_SHR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PUInt16(Right)^; end;
procedure lpeInt32_SHR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PInt16(Right)^; end;
procedure lpeInt32_SHR_UInt32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PUInt32(Right)^; end;
procedure lpeInt32_SHR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PInt32(Right)^; end;
procedure lpeInt32_SHR_UInt64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PUInt64(Right)^; end;
procedure lpeInt32_SHR_Int64(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ shr PInt64(Right)^; end;
procedure lpeUInt64_SHR_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PUInt8(Right)^; end;
procedure lpeUInt64_SHR_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PInt8(Right)^; end;
procedure lpeUInt64_SHR_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PUInt16(Right)^; end;
procedure lpeUInt64_SHR_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PInt16(Right)^; end;
procedure lpeUInt64_SHR_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PUInt32(Right)^; end;
procedure lpeUInt64_SHR_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PInt32(Right)^; end;
procedure lpeUInt64_SHR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PUInt64(Right)^; end;
procedure lpeUInt64_SHR_Int64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ shr PInt64(Right)^; end;
procedure lpeInt64_SHR_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PUInt8(Right)^; end;
procedure lpeInt64_SHR_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PInt8(Right)^; end;
procedure lpeInt64_SHR_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PUInt16(Right)^; end;
procedure lpeInt64_SHR_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PInt16(Right)^; end;
procedure lpeInt64_SHR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PUInt32(Right)^; end;
procedure lpeInt64_SHR_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PInt32(Right)^; end;
procedure lpeInt64_SHR_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PUInt64(Right)^; end;
procedure lpeInt64_SHR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ shr PInt64(Right)^; end;
procedure lpeUInt8_XOR_UInt8(const Dest, Left, Right: Pointer); begin PUInt8(Dest)^ := PUInt8(Left)^ xor PUInt8(Right)^; end;
procedure lpeUInt8_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ xor PInt8(Right)^; end;
procedure lpeUInt8_XOR_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt8(Left)^ xor PUInt16(Right)^; end;
procedure lpeUInt8_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ xor PInt16(Right)^; end;
procedure lpeUInt8_XOR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt8(Left)^ xor PUInt32(Right)^; end;
procedure lpeUInt8_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt8(Left)^ xor PInt32(Right)^; end;
procedure lpeUInt8_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt8(Left)^ xor PUInt64(Right)^; end;
procedure lpeUInt8_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt8(Left)^ xor PInt64(Right)^; end;
procedure lpeInt8_XOR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ xor PUInt8(Right)^; end;
procedure lpeInt8_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt8(Dest)^ := PInt8(Left)^ xor PInt8(Right)^; end;
procedure lpeInt8_XOR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ xor PUInt16(Right)^; end;
procedure lpeInt8_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt8(Left)^ xor PInt16(Right)^; end;
procedure lpeInt8_XOR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ xor PUInt32(Right)^; end;
procedure lpeInt8_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt8(Left)^ xor PInt32(Right)^; end;
procedure lpeInt8_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt8(Left)^ xor PUInt64(Right)^; end;
procedure lpeInt8_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt8(Left)^ xor PInt64(Right)^; end;
procedure lpeUInt16_XOR_UInt8(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ xor PUInt8(Right)^; end;
procedure lpeUInt16_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ xor PInt8(Right)^; end;
procedure lpeUInt16_XOR_UInt16(const Dest, Left, Right: Pointer); begin PUInt16(Dest)^ := PUInt16(Left)^ xor PUInt16(Right)^; end;
procedure lpeUInt16_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ xor PInt16(Right)^; end;
procedure lpeUInt16_XOR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt16(Left)^ xor PUInt32(Right)^; end;
procedure lpeUInt16_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PUInt16(Left)^ xor PInt32(Right)^; end;
procedure lpeUInt16_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt16(Left)^ xor PUInt64(Right)^; end;
procedure lpeUInt16_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt16(Left)^ xor PInt64(Right)^; end;
procedure lpeInt16_XOR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ xor PUInt8(Right)^; end;
procedure lpeInt16_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ xor PInt8(Right)^; end;
procedure lpeInt16_XOR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ xor PUInt16(Right)^; end;
procedure lpeInt16_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt16(Dest)^ := PInt16(Left)^ xor PInt16(Right)^; end;
procedure lpeInt16_XOR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ xor PUInt32(Right)^; end;
procedure lpeInt16_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt16(Left)^ xor PInt32(Right)^; end;
procedure lpeInt16_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt16(Left)^ xor PUInt64(Right)^; end;
procedure lpeInt16_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt16(Left)^ xor PInt64(Right)^; end;
procedure lpeUInt32_XOR_UInt8(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ xor PUInt8(Right)^; end;
procedure lpeUInt32_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ xor PInt8(Right)^; end;
procedure lpeUInt32_XOR_UInt16(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ xor PUInt16(Right)^; end;
procedure lpeUInt32_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ xor PInt16(Right)^; end;
procedure lpeUInt32_XOR_UInt32(const Dest, Left, Right: Pointer); begin PUInt32(Dest)^ := PUInt32(Left)^ xor PUInt32(Right)^; end;
procedure lpeUInt32_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ xor PInt32(Right)^; end;
procedure lpeUInt32_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt32(Left)^ xor PUInt64(Right)^; end;
procedure lpeUInt32_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt32(Left)^ xor PInt64(Right)^; end;
procedure lpeInt32_XOR_UInt8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ xor PUInt8(Right)^; end;
procedure lpeInt32_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ xor PInt8(Right)^; end;
procedure lpeInt32_XOR_UInt16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ xor PUInt16(Right)^; end;
procedure lpeInt32_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ xor PInt16(Right)^; end;
procedure lpeInt32_XOR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ xor PUInt32(Right)^; end;
procedure lpeInt32_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := PInt32(Left)^ xor PInt32(Right)^; end;
procedure lpeInt32_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PInt32(Left)^ xor PUInt64(Right)^; end;
procedure lpeInt32_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt32(Left)^ xor PInt64(Right)^; end;
procedure lpeUInt64_XOR_UInt8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PUInt8(Right)^; end;
procedure lpeUInt64_XOR_Int8(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PInt8(Right)^; end;
procedure lpeUInt64_XOR_UInt16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PUInt16(Right)^; end;
procedure lpeUInt64_XOR_Int16(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PInt16(Right)^; end;
procedure lpeUInt64_XOR_UInt32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PUInt32(Right)^; end;
procedure lpeUInt64_XOR_Int32(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PInt32(Right)^; end;
procedure lpeUInt64_XOR_UInt64(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := PUInt64(Left)^ xor PUInt64(Right)^; end;
procedure lpeUInt64_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PUInt64(Left)^ xor PInt64(Right)^; end;
procedure lpeInt64_XOR_UInt8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PUInt8(Right)^; end;
procedure lpeInt64_XOR_Int8(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PInt8(Right)^; end;
procedure lpeInt64_XOR_UInt16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PUInt16(Right)^; end;
procedure lpeInt64_XOR_Int16(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PInt16(Right)^; end;
procedure lpeInt64_XOR_UInt32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PUInt32(Right)^; end;
procedure lpeInt64_XOR_Int32(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PInt32(Right)^; end;
procedure lpeInt64_XOR_UInt64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PUInt64(Right)^; end;
procedure lpeInt64_XOR_Int64(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := PInt64(Left)^ xor PInt64(Right)^; end;
procedure lpeBoolean_XOR_Boolean(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PBoolean(Left)^ xor PBoolean(Right)^; end;
procedure lpeUInt8_UMIN(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := -PUInt8(Left)^; end;
procedure lpeInt8_UMIN(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := -PInt8(Left)^; end;
procedure lpeUInt16_UMIN(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := -PUInt16(Left)^; end;
procedure lpeInt16_UMIN(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := -PInt16(Left)^; end;
procedure lpeUInt32_UMIN(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := -PUInt32(Left)^; end;
procedure lpeInt32_UMIN(const Dest, Left, Right: Pointer); begin PInt32(Dest)^ := -PInt32(Left)^; end;
procedure lpeUInt64_UMIN(const Dest, Left, Right: Pointer); begin PUInt64(Dest)^ := -PUInt64(Left)^; end;
procedure lpeInt64_UMIN(const Dest, Left, Right: Pointer); begin PInt64(Dest)^ := -PInt64(Left)^; end;
procedure lpeSingle_UMIN(const Dest, Left, Right: Pointer); begin PSingle(Dest)^ := -PSingle(Left)^; end;
procedure lpeDouble_UMIN(const Dest, Left, Right: Pointer); begin PDouble(Dest)^ := -PDouble(Left)^; end;
procedure lpeCurrency_UMIN(const Dest, Left, Right: Pointer); begin PCurrency(Dest)^ := -PCurrency(Left)^; end;
procedure lpeExtended_UMIN(const Dest, Left, Right: Pointer); begin PExtended(Dest)^ := -PExtended(Left)^; end;

//string + char
//AnsiString
procedure lpeAString_EQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ = PAnsiString(Right)^; end;
procedure lpeAString_EQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ = PWideString(Right)^; end;
procedure lpeAString_EQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ = PUnicodeString(Right)^; end;
procedure lpeAString_EQ_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ = PAnsiChar(Right)^; end;
procedure lpeAString_EQ_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ = PWideChar(Right)^; end;
procedure lpeAString_GT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ > PAnsiString(Right)^; end;
procedure lpeAString_GT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ > PWideString(Right)^; end;
procedure lpeAString_GT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ > PUnicodeString(Right)^; end;
procedure lpeAString_GT_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ > PAnsiChar(Right)^; end;
procedure lpeAString_GT_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ > PWideChar(Right)^; end;
procedure lpeAString_GTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ >= PAnsiString(Right)^; end;
procedure lpeAString_GTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ >= PWideString(Right)^; end;
procedure lpeAString_GTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ >= PUnicodeString(Right)^; end;
procedure lpeAString_GTE_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ >= PAnsiChar(Right)^; end;
procedure lpeAString_GTE_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ >= PWideChar(Right)^; end;
procedure lpeAString_LT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ < PAnsiString(Right)^; end;
procedure lpeAString_LT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ < PWideString(Right)^; end;
procedure lpeAString_LT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ < PUnicodeString(Right)^; end;
procedure lpeAString_LT_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ < PAnsiChar(Right)^; end;
procedure lpeAString_LT_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ < PWideChar(Right)^; end;
procedure lpeAString_LTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <= PAnsiString(Right)^; end;
procedure lpeAString_LTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <= PWideString(Right)^; end;
procedure lpeAString_LTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <= PUnicodeString(Right)^; end;
procedure lpeAString_LTE_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <= PAnsiChar(Right)^; end;
procedure lpeAString_LTE_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <= PWideChar(Right)^; end;
procedure lpeAString_NEQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <> PAnsiString(Right)^; end;
procedure lpeAString_NEQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <> PWideString(Right)^; end;
procedure lpeAString_NEQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <> PUnicodeString(Right)^; end;
procedure lpeAString_NEQ_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <> PAnsiChar(Right)^; end;
procedure lpeAString_NEQ_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiString(Left)^ <> PWideChar(Right)^; end;

procedure lpeAString_ASGN_AString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiString(Left)^; end;
procedure lpeAString_ASGN_WString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PWideString(Left)^; end;
procedure lpeAString_ASGN_UString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PUnicodeString(Left)^; end;
procedure lpeAString_ASGN_AChar(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiChar(Left)^; end;
procedure lpeAString_ASGN_WChar(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PWideChar(Left)^; end;
procedure lpeAString_PLUS_AString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiString(Left)^ + PAnsiString(Right)^; end;
procedure lpeAString_PLUS_WString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PAnsiString(Left)^ + PWideString(Right)^; end;
procedure lpeAString_PLUS_UString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiString(Left)^ + PUnicodeString(Right)^; end;
procedure lpeAString_PLUS_AChar(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiString(Left)^ + PAnsiChar(Right)^; end;
procedure lpeAString_PLUS_WChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiString(Left)^ + PWideChar(Right)^; end;

procedure lpeAString_IND_Int8(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PInt8(Right)^]; end;
procedure lpeAString_IND_UInt8(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PUInt8(Right)^]; end;
procedure lpeAString_IND_Int16(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PInt16(Right)^]; end;
procedure lpeAString_IND_UInt16(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PUInt16(Right)^]; end;
procedure lpeAString_IND_Int32(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PInt32(Right)^]; end;
procedure lpeAString_IND_UInt32(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PUInt32(Right)^]; end;
procedure lpeAString_IND_Int64(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PInt64(Right)^]; end;
procedure lpeAString_IND_UInt64(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiString(Left)^[PUInt64(Right)^]; end;

//WideString
procedure lpeWString_EQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ = PAnsiString(Right)^; end;
procedure lpeWString_EQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ = PWideString(Right)^; end;
procedure lpeWString_EQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ = PUnicodeString(Right)^; end;
procedure lpeWString_EQ_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ = PAnsiChar(Right)^; end;
procedure lpeWString_EQ_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ = PWideChar(Right)^; end;
procedure lpeWString_GT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ > PAnsiString(Right)^; end;
procedure lpeWString_GT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ > PWideString(Right)^; end;
procedure lpeWString_GT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ > PUnicodeString(Right)^; end;
procedure lpeWString_GT_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ > PAnsiChar(Right)^; end;
procedure lpeWString_GT_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ > PWideChar(Right)^; end;
procedure lpeWString_GTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ >= PAnsiString(Right)^; end;
procedure lpeWString_GTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ >= PWideString(Right)^; end;
procedure lpeWString_GTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ >= PUnicodeString(Right)^; end;
procedure lpeWString_GTE_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ >= PAnsiChar(Right)^; end;
procedure lpeWString_GTE_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ >= PWideChar(Right)^; end;
procedure lpeWString_LT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ < PAnsiString(Right)^; end;
procedure lpeWString_LT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ < PWideString(Right)^; end;
procedure lpeWString_LT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ < PUnicodeString(Right)^; end;
procedure lpeWString_LT_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ < PAnsiChar(Right)^; end;
procedure lpeWString_LT_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ < PWideChar(Right)^; end;
procedure lpeWString_LTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <= PAnsiString(Right)^; end;
procedure lpeWString_LTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <= PWideString(Right)^; end;
procedure lpeWString_LTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <= PUnicodeString(Right)^; end;
procedure lpeWString_LTE_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <= PAnsiChar(Right)^; end;
procedure lpeWString_LTE_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <= PWideChar(Right)^; end;
procedure lpeWString_NEQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <> PAnsiString(Right)^; end;
procedure lpeWString_NEQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <> PWideString(Right)^; end;
procedure lpeWString_NEQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <> PUnicodeString(Right)^; end;
procedure lpeWString_NEQ_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <> PAnsiChar(Right)^; end;
procedure lpeWString_NEQ_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideString(Left)^ <> PWideChar(Right)^; end;

procedure lpeWString_ASGN_WString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^; end;
procedure lpeWString_ASGN_AString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PAnsiString(Left)^; end;
procedure lpeWString_ASGN_UString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PUnicodeString(Left)^; end;
procedure lpeWString_ASGN_WChar(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideChar(Left)^; end;
procedure lpeWString_ASGN_AChar(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PAnsiChar(Left)^; end;
procedure lpeWString_PLUS_WString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^ + PWideString(Right)^; end;
procedure lpeWString_PLUS_AString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^ + PAnsiString(Right)^; end;
procedure lpeWString_PLUS_UString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^ + PUnicodeString(Right)^; end;
procedure lpeWString_PLUS_WChar(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^ + PWideChar(Right)^; end;
procedure lpeWString_PLUS_AChar(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideString(Left)^ + PAnsiChar(Right)^; end;

procedure lpeWString_IND_Int8(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PInt8(Right)^]; end;
procedure lpeWString_IND_UInt8(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PUInt8(Right)^]; end;
procedure lpeWString_IND_Int16(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PInt16(Right)^]; end;
procedure lpeWString_IND_UInt16(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PUInt16(Right)^]; end;
procedure lpeWString_IND_Int32(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PInt32(Right)^]; end;
procedure lpeWString_IND_UInt32(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PUInt32(Right)^]; end;
procedure lpeWString_IND_Int64(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PInt64(Right)^]; end;
procedure lpeWString_IND_UInt64(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideString(Left)^[PUInt64(Right)^]; end;

//UnicodeString
procedure lpeUString_EQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ = PAnsiString(Right)^; end;
procedure lpeUString_EQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ = PWideString(Right)^; end;
procedure lpeUString_EQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ = PUnicodeString(Right)^; end;
procedure lpeUString_EQ_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ = PAnsiChar(Right)^; end;
procedure lpeUString_EQ_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ = PWideChar(Right)^; end;
procedure lpeUString_GT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ > PAnsiString(Right)^; end;
procedure lpeUString_GT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ > PWideString(Right)^; end;
procedure lpeUString_GT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ > PUnicodeString(Right)^; end;
procedure lpeUString_GT_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ > PAnsiChar(Right)^; end;
procedure lpeUString_GT_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ > PWideChar(Right)^; end;
procedure lpeUString_GTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ >= PAnsiString(Right)^; end;
procedure lpeUString_GTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ >= PWideString(Right)^; end;
procedure lpeUString_GTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ >= PUnicodeString(Right)^; end;
procedure lpeUString_GTE_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ >= PAnsiChar(Right)^; end;
procedure lpeUString_GTE_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ >= PWideChar(Right)^; end;
procedure lpeUString_LT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ < PAnsiString(Right)^; end;
procedure lpeUString_LT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ < PWideString(Right)^; end;
procedure lpeUString_LT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ < PUnicodeString(Right)^; end;
procedure lpeUString_LT_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ < PAnsiChar(Right)^; end;
procedure lpeUString_LT_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ < PWideChar(Right)^; end;
procedure lpeUString_LTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <= PAnsiString(Right)^; end;
procedure lpeUString_LTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <= PWideString(Right)^; end;
procedure lpeUString_LTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <= PUnicodeString(Right)^; end;
procedure lpeUString_LTE_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <= PAnsiChar(Right)^; end;
procedure lpeUString_LTE_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <= PWideChar(Right)^; end;
procedure lpeUString_NEQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <> PAnsiString(Right)^; end;
procedure lpeUString_NEQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <> PWideString(Right)^; end;
procedure lpeUString_NEQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <> PUnicodeString(Right)^; end;
procedure lpeUString_NEQ_AChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <> PAnsiChar(Right)^; end;
procedure lpeUString_NEQ_WChar(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PUnicodeString(Left)^ <> PWideChar(Right)^; end;

procedure lpeUString_ASGN_WString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PWideString(Left)^; end;
procedure lpeUString_ASGN_AString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiString(Left)^; end;
procedure lpeUString_ASGN_UString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PUnicodeString(Left)^; end;
procedure lpeUString_ASGN_WChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PWideChar(Left)^; end;
procedure lpeUString_ASGN_AChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiChar(Left)^; end;
procedure lpeUString_PLUS_WString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PUnicodeString(Left)^ + PWideString(Right)^; end;
procedure lpeUString_PLUS_AString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PUnicodeString(Left)^ + PAnsiString(Right)^; end;
procedure lpeUString_PLUS_UString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PUnicodeString(Left)^ + PUnicodeString(Right)^; end;
procedure lpeUString_PLUS_WChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PUnicodeString(Left)^ + PWideChar(Right)^; end;
procedure lpeUString_PLUS_AChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PUnicodeString(Left)^ + PAnsiChar(Right)^; end;

procedure lpeUString_IND_Int8(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PInt8(Right)^]; end;
procedure lpeUString_IND_UInt8(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PUInt8(Right)^]; end;
procedure lpeUString_IND_Int16(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PInt16(Right)^]; end;
procedure lpeUString_IND_UInt16(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PUInt16(Right)^]; end;
procedure lpeUString_IND_Int32(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PInt32(Right)^]; end;
procedure lpeUString_IND_UInt32(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PUInt32(Right)^]; end;
procedure lpeUString_IND_Int64(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PInt64(Right)^]; end;
procedure lpeUString_IND_UInt64(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PUnicodeString(Left)^[PUInt64(Right)^]; end;

//AnsiChar
procedure lpeAChar_EQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ = PAnsiString(Right)^; end;
procedure lpeAChar_EQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ = PWideString(Right)^; end;
procedure lpeAChar_EQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ = PUnicodeString(Right)^; end;
procedure lpeAChar_GT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ > PAnsiString(Right)^; end;
procedure lpeAChar_GT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ > PWideString(Right)^; end;
procedure lpeAChar_GT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ > PUnicodeString(Right)^; end;
procedure lpeAChar_GTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ >= PAnsiString(Right)^; end;
procedure lpeAChar_GTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ >= PWideString(Right)^; end;
procedure lpeAChar_GTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ >= PUnicodeString(Right)^; end;
procedure lpeAChar_LT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ < PAnsiString(Right)^; end;
procedure lpeAChar_LT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ < PWideString(Right)^; end;
procedure lpeAChar_LT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ < PUnicodeString(Right)^; end;
procedure lpeAChar_LTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ <= PAnsiString(Right)^; end;
procedure lpeAChar_LTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ <= PWideString(Right)^; end;
procedure lpeAChar_LTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ <= PUnicodeString(Right)^; end;
procedure lpeAChar_NEQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ <> PAnsiString(Right)^; end;
procedure lpeAChar_NEQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ <> PWideString(Right)^; end;
procedure lpeAChar_NEQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PAnsiChar(Left)^ <> PUnicodeString(Right)^; end;

procedure lpeAChar_ASGN_AChar(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := PAnsiChar(Left)^; end;
procedure lpeAChar_ASGN_WChar(const Dest, Left, Right: Pointer); begin PAnsiChar(Dest)^ := AnsiChar(PWideChar(Left)^); end;
procedure lpeAChar_PLUS_AString(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiChar(Left)^ + PAnsiString(Right)^; end;
procedure lpeAChar_PLUS_WString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PAnsiChar(Left)^ + PWideString(Right)^; end;
procedure lpeAChar_PLUS_UString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiChar(Left)^ + PUnicodeString(Right)^; end;
procedure lpeAChar_PLUS_AChar(const Dest, Left, Right: Pointer); begin PAnsiString(Dest)^ := PAnsiChar(Left)^ + PAnsiChar(Right)^; end;
procedure lpeAChar_PLUS_WChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiChar(Left)^ + PWideChar(Right)^; end;

//WideChar
procedure lpeWChar_EQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ = PAnsiString(Right)^; end;
procedure lpeWChar_EQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ = PWideString(Right)^; end;
procedure lpeWChar_EQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ = PUnicodeString(Right)^; end;
procedure lpeWChar_GT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ > PAnsiString(Right)^; end;
procedure lpeWChar_GT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ > PWideString(Right)^; end;
procedure lpeWChar_GT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ > PUnicodeString(Right)^; end;
procedure lpeWChar_GTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ >= PAnsiString(Right)^; end;
procedure lpeWChar_GTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ >= PWideString(Right)^; end;
procedure lpeWChar_GTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ >= PUnicodeString(Right)^; end;
procedure lpeWChar_LT_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ < PAnsiString(Right)^; end;
procedure lpeWChar_LT_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ < PWideString(Right)^; end;
procedure lpeWChar_LT_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ < PUnicodeString(Right)^; end;
procedure lpeWChar_LTE_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ <= PAnsiString(Right)^; end;
procedure lpeWChar_LTE_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ <= PWideString(Right)^; end;
procedure lpeWChar_LTE_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ <= PUnicodeString(Right)^; end;
procedure lpeWChar_NEQ_AString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ <> PAnsiString(Right)^; end;
procedure lpeWChar_NEQ_WString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ <> PWideString(Right)^; end;
procedure lpeWChar_NEQ_UString(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PWideChar(Left)^ <> PUnicodeString(Right)^; end;

procedure lpeWChar_ASGN_WChar(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := PWideChar(Left)^; end;
procedure lpeWChar_ASGN_AChar(const Dest, Left, Right: Pointer); begin PWideChar(Dest)^ := WideChar(PAnsiChar(Left)^); end;
procedure lpeWChar_PLUS_WString(const Dest, Left, Right: Pointer); begin PWideString(Dest)^ := PWideChar(Left)^ + PWideString(Right)^; end;
procedure lpeWChar_PLUS_AString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PWideChar(Left)^ + PAnsiString(Right)^; end;
procedure lpeWChar_PLUS_UString(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PAnsiChar(Left)^ + PUnicodeString(Right)^; end;
procedure lpeWChar_PLUS_WChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PWideChar(Left)^ + PWideChar(Right)^; end;
procedure lpeWChar_PLUS_AChar(const Dest, Left, Right: Pointer); begin PUnicodeString(Dest)^ := PWideChar(Left)^ + PAnsiChar(Right)^; end;

//Pointer
procedure lpePointer_EQ_Pointer(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PPointer(Left)^ = PPointer(Right)^; end;
procedure lpePointer_GT_Pointer(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PtrInt(PPointer(Left)^) > PtrInt(PPointer(Right)^); end;
procedure lpePointer_GTEQ_Pointer(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PtrInt(PPointer(Left)^) >= PtrInt(PPointer(Right)^); end;
procedure lpePointer_LT_Pointer(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PtrInt(PPointer(Left)^) < PtrInt(PPointer(Right)^); end;
procedure lpePointer_LTEQ_Pointer(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PtrInt(PPointer(Left)^) <= PtrInt(PPointer(Right)^); end;
procedure lpePointer_NEQ_Pointer(const Dest, Left, Right: Pointer); begin PBoolean(Dest)^ := PPointer(Left)^ <> PPointer(Right)^; end;
procedure lpePointer_ASGN_Pointer(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := PPointer(Left)^; end;

procedure lpePointer_ADD_UInt8(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt8(Right)^); end;
procedure lpePointer_ADD_Int8(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt8(Right)^); end;
procedure lpePointer_ADD_UInt16(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt16(Right)^); end;
procedure lpePointer_ADD_Int16(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt16(Right)^); end;
procedure lpePointer_ADD_UInt32(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt32(Right)^); end;
procedure lpePointer_ADD_Int32(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt32(Right)^); end;
procedure lpePointer_ADD_UInt64(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt64(Right)^); end;
procedure lpePointer_ADD_Int64(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt64(Right)^); end;

procedure lpePointer_SUB_UInt8(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt8(Right)^); end;
procedure lpePointer_SUB_Int8(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt8(Right)^); end;
procedure lpePointer_SUB_UInt16(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt16(Right)^); end;
procedure lpePointer_SUB_Int16(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt16(Right)^); end;
procedure lpePointer_SUB_UInt32(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt32(Right)^); end;
procedure lpePointer_SUB_Int32(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt32(Right)^); end;
procedure lpePointer_SUB_UInt64(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrUInt(PPointer(Left)^) + PUInt64(Right)^); end;
procedure lpePointer_SUB_Int64(const Dest, Left, Right: Pointer); begin PPointer(Dest)^ := Pointer(PtrInt(PPointer(Left)^) + PInt64(Right)^); end;

