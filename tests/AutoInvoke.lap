{$assertions on}

function Test: Boolean;
begin
  Result := True;
end;

var
  f: function: Boolean;
begin
  {$autoinvoke off}
  f := nil;
  Assert(f = nil, 'f <> nil');
  Assert((f = nil) or f(), 'not f');

  f := Test;
  Assert(f = Test, 'f <> Test');
  Assert(f(), 'Test');
  Assert((f <> nil) and f(), 'not Test');

  WriteLn('Autoinvoke off :: Passed');

  {$autoinvoke on}
  f := nil;
  Assert(@f = nil, 'f <> nil');
  Assert((@f = nil) or f, 'not f');

  f := @Test;
  Assert(@f = @Test, 'f <> Test');
  Assert(f, 'Test');
  Assert((@f <> nil) and f, 'not Test');

  WriteLn('Autoinvoke on  :: Passed');
end;